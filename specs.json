{
    "swagger": "2.0",
    "info": {
      "version": "v1",
      "title": "Maxpanda API V1",
      "description": "The Maxpanda API documentation for version 1",
      "termsOfService": "Documented Online",
      "contact": {
        "name": "Maxpanda CMMS",
        "url": "https://www.maxpanda.com/helpmemax/#api"
      },
      "license": {
        "name": "License & Terms",
        "url": "https://www.maxpanda.com/terms-conditions.html"
      }
    },
    "host": "api.maxpanda.com",
    "schemes": [
      "https"
    ],
    "paths": {
      "/v1/Company/AssetStatuses": {
        "get": {
          "tags": [
            "Asset Status"
          ],
          "summary": "Get a paged list of Asset Status",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "AssetStatuses_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetStatusResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/AssetStatuses/id": {
        "get": {
          "tags": [
            "Asset Status"
          ],
          "summary": "Get a specific Asset Status record",
          "operationId": "AssetStatuses_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Asset Status id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Asset Status was found",
              "schema": {
                "$ref": "#/definitions/AssetStatusResponseModel"
              }
            },
            "404": {
              "description": "the Asset Status was not found"
            }
          }
        }
      },
      "/v1/Assets": {
        "get": {
          "tags": [
            "Assets"
          ],
          "summary": "Get a list of Assets",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "AssetsV1_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetResponseModel"
              }
            }
          }
        }
      },
      "/v1/Asset/id": {
        "get": {
          "tags": [
            "Assets"
          ],
          "summary": "Get a specific Asset",
          "operationId": "AssetsV1_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The asset id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the asset was found",
              "schema": {
                "$ref": "#/definitions/AssetResponseModel"
              }
            },
            "404": {
              "description": "the asset was not found"
            }
          }
        }
      },
      "/v1/Asset": {
        "put": {
          "tags": [
            "Assets"
          ],
          "summary": "Update an Asset",
          "operationId": "AssetsV1_UpdateAsset",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "asset",
              "in": "body",
              "description": "Details of the Asset",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateAsset"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the asset was updated",
              "schema": {
                "$ref": "#/definitions/AssetCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "the asset was not found"
            }
          }
        },
        "post": {
          "tags": [
            "Assets"
          ],
          "summary": "Create an Asset",
          "operationId": "AssetsV1_Create",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "asset",
              "in": "body",
              "description": "Details of the new Asset",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Asset"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the asset was found",
              "schema": {
                "$ref": "#/definitions/AssetCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "the asset was not found"
            }
          }
        }
      },
      "/v1/Company/AssetTypes": {
        "get": {
          "tags": [
            "Asset Type"
          ],
          "summary": "Get a paged list of Asset Types",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "AssetTypes_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/AssetTypeResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/AssetTypes/id": {
        "get": {
          "tags": [
            "Asset Type"
          ],
          "summary": "Get a specific Asset Type type record",
          "operationId": "AssetTypes_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "TheAsset Type id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the asset type was found",
              "schema": {
                "$ref": "#/definitions/AssetTypeResponseModel"
              }
            },
            "404": {
              "description": "the asset type was not found"
            }
          }
        }
      },
      "/v1/Bins": {
        "get": {
          "tags": [
            "Bins"
          ],
          "summary": "Get list of Bins",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "Bin_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/BinResponseModel"
              }
            }
          }
        },
        "put": {
          "tags": [
            "Bins"
          ],
          "summary": "Update a Bin",
          "operationId": "Bin_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "updateBin",
              "in": "body",
              "description": "Details of the Bin",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateBinModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the bin was updated",
              "schema": {
                "$ref": "#/definitions/BinCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "some thing went wrong"
            }
          }
        },
        "post": {
          "tags": [
            "Bins"
          ],
          "summary": "Create a Bin",
          "operationId": "Bin_Post",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "bin",
              "in": "body",
              "description": "Details of the new Bin",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateBinModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the bin was created",
              "schema": {
                "$ref": "#/definitions/BinCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "some thing went wrong"
            }
          }
        }
      },
      "/v1/Bins/id": {
        "get": {
          "tags": [
            "Bins"
          ],
          "summary": "Get a specific Bin",
          "operationId": "Bin_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Bin id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Bin was found",
              "schema": {
                "$ref": "#/definitions/BinResponseModel"
              }
            },
            "404": {
              "description": "the Bin was not found"
            }
          }
        }
      },
      "/v1/Buildings": {
        "get": {
          "tags": [
            "Buildings"
          ],
          "summary": "Get a paged list of buildings",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "Buildings_GetBuildings",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/BuildingResponseModel"
              }
            }
          }
        }
      },
      "/v1/Building/id": {
        "get": {
          "tags": [
            "Buildings"
          ],
          "summary": "Get a specific Building",
          "operationId": "Buildings_GetBuilding",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The building id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the building was found",
              "schema": {
                "$ref": "#/definitions/BuildingResponseModel"
              }
            },
            "404": {
              "description": "the building was not found"
            }
          }
        }
      },
      "/v1/Building": {
        "post": {
          "tags": [
            "Buildings"
          ],
          "summary": "Create a new Building",
          "operationId": "Buildings_CreateBuilding",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "building",
              "in": "body",
              "description": "Details of the new Building",
              "required": true,
              "schema": {
                "$ref": "#/definitions/BuildingCreateModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/BuildingCreateUpdateResponseModel"
              }
            }
          }
        },
        "patch": {
          "tags": [
            "Buildings"
          ],
          "summary": "Update specific attributes of a given building",
          "operationId": "Buildings_Patch",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "building",
              "in": "body",
              "description": "Building details can be found in Building API",
              "required": true,
              "schema": {
                "$ref": "#/definitions/BuildingUpdateModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the building was patched",
              "schema": {
                "$ref": "#/definitions/BuildingCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "the building was not found"
            }
          }
        }
      },
      "/v1/Customer": {
        "put": {
          "tags": [
            "Customer"
          ],
          "summary": "Update an existing customer.",
          "operationId": "Customer_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "customer",
              "in": "body",
              "description": "The customer to be updated",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateCustomerModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The customer was updated",
              "schema": {
                "$ref": "#/definitions/CustomerCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "The customer was not found, update failed"
            }
          }
        },
        "post": {
          "tags": [
            "Customer"
          ],
          "summary": "Create a new customer",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "Customer_Post",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "customer",
              "in": "body",
              "description": "The Customer to be added",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateCustomerModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CustomerCreateUpdateResponseModel"
              }
            }
          }
        }
      },
      "/v1/Customers": {
        "get": {
          "tags": [
            "Customer"
          ],
          "summary": "Get a paged list of Customers",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "Customer_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CustomerResponseModel"
              }
            }
          }
        }
      },
      "/v1/Customer/id": {
        "get": {
          "tags": [
            "Customer"
          ],
          "summary": "Get a specific customer",
          "operationId": "Customer_GetCustomerById",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The customer id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the User was found",
              "schema": {
                "$ref": "#/definitions/CustomerResponseModel"
              }
            },
            "404": {
              "description": "the User was not found"
            }
          }
        }
      },
      "/v1/GetCustomerInvoices": {
        "get": {
          "tags": [
            "Customer Invoices"
          ],
          "summary": "Get list of Customer Invoices",
          "operationId": "CustomerInvoice_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/InvoiceResponseModel"
              }
            }
          }
        }
      },
      "/v1/GetCustomerInvoice/id": {
        "get": {
          "tags": [
            "Customer Invoices"
          ],
          "summary": "Get a specific Customer Invoice",
          "operationId": "CustomerInvoice_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "Invoice ID can be found in your Maxpanda Customer Invoice index or Customer Invoice API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the invoice was found",
              "schema": {
                "$ref": "#/definitions/InvoiceResponseModel"
              }
            },
            "404": {
              "description": "the invoice was not found"
            }
          }
        }
      },
      "/v1/CustomerInvoice": {
        "put": {
          "tags": [
            "Customer Invoices"
          ],
          "summary": "Update Customer Invoice",
          "operationId": "CustomerInvoice_EditCustomerInvoice",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "updateCustomerInvoice",
              "in": "body",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateCustomerInvoice"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/InvoiceCreateUpdateResponseModel"
              }
            }
          }
        },
        "post": {
          "tags": [
            "Customer Invoices"
          ],
          "summary": "Create a new customer invoice.",
          "operationId": "CustomerInvoice_CreateCustomerInvoice",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "customerinvoice",
              "in": "body",
              "description": "The Customer invoice to be added",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateCustomerInvoice"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/InvoiceCreateUpdateResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/Departments": {
        "get": {
          "tags": [
            "Department"
          ],
          "summary": "Get a paged list of departments",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "Department_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/DepartmentResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/Department/id": {
        "get": {
          "tags": [
            "Department"
          ],
          "summary": "Get a specific Department type record",
          "operationId": "Department_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "Id of the Building Group to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the department was found",
              "schema": {
                "$ref": "#/definitions/DepartmentResponseModel"
              }
            },
            "404": {
              "description": "the department was not found"
            }
          }
        }
      },
      "/v1/Company/InvoiceItemTypes": {
        "get": {
          "tags": [
            "Invoice Item Type"
          ],
          "summary": "Get a paged list of Invoice Item Types",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "InvoiceItemTypes_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/InvoiceItemTypeResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/InvoiceItemType/id": {
        "get": {
          "tags": [
            "Invoice Item Type"
          ],
          "summary": "Get a specific Invoice Item Type record",
          "operationId": "InvoiceItemTypes_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "TheInvoice Item Type id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Invoice Item Type was found",
              "schema": {
                "$ref": "#/definitions/InvoiceItemTypeResponseModel"
              }
            },
            "404": {
              "description": "the Invoice Item Type was not found"
            }
          }
        }
      },
      "/v1/Company/InvoiceTaxes": {
        "get": {
          "tags": [
            "Invoice Item Tax"
          ],
          "summary": "Get a paged list of Invoice Taxes",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "InvoiceTax_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/InvoiceTaxResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/InvoiceTax/id": {
        "get": {
          "tags": [
            "Invoice Item Tax"
          ],
          "summary": "Get a specific Invoice Tax record",
          "operationId": "InvoiceTax_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Invoice Tax Id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Invoice Tax was found",
              "schema": {
                "$ref": "#/definitions/InvoiceTaxResponseModel"
              }
            },
            "404": {
              "description": "the Invoice Tax Type was not found"
            }
          }
        }
      },
      "/v1/Locations": {
        "get": {
          "tags": [
            "Location"
          ],
          "summary": "Get a list of locations",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "Locations_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/LocationResponseModel"
              }
            }
          }
        }
      },
      "/v1/Location/id": {
        "get": {
          "tags": [
            "Location"
          ],
          "summary": "Get a specific location",
          "operationId": "Locations_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The location id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the location was found",
              "schema": {
                "$ref": "#/definitions/LocationResponseModel"
              }
            },
            "404": {
              "description": "the location was not found"
            }
          }
        }
      },
      "/v1/Location": {
        "put": {
          "tags": [
            "Location"
          ],
          "summary": "Update a location",
          "operationId": "Locations_Patch",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "location",
              "in": "body",
              "description": "Details of the new location",
              "required": true,
              "schema": {
                "$ref": "#/definitions/LocationUpdateModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The new location was created",
              "schema": {
                "$ref": "#/definitions/LocationCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "Failed to create new location"
            }
          }
        },
        "post": {
          "tags": [
            "Location"
          ],
          "summary": "Create a location",
          "operationId": "Locations_Create",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "location",
              "in": "body",
              "description": "Details of the new location",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Location"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The new location was created",
              "schema": {
                "$ref": "#/definitions/LocationCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "Failed to create new location"
            }
          }
        }
      },
      "/v1/Company/LocationTypes": {
        "get": {
          "tags": [
            "Location Type"
          ],
          "summary": "Get a paged list of Location Types",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "LocationTypes_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/LocationTypeResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/LocationTypes/id": {
        "get": {
          "tags": [
            "Location Type"
          ],
          "summary": "Get a specific location type record",
          "operationId": "LocationTypes_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The location type id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the location type was found",
              "schema": {
                "$ref": "#/definitions/LocationTypeResponseModel"
              }
            },
            "404": {
              "description": "the location type was not found"
            }
          }
        }
      },
      "/v1/Company/MeteringTypes": {
        "get": {
          "tags": [
            "Metering Type"
          ],
          "summary": "Get a paged list of Metering Types",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "MeteringTypes_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/MeteringTypeResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/MeteringTypes/id": {
        "get": {
          "tags": [
            "Metering Type"
          ],
          "summary": "Get a specific Metering Type record",
          "operationId": "MeteringTypes_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Metering Types id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Metering Type was found",
              "schema": {
                "$ref": "#/definitions/MeteringTypeResponseModel"
              }
            },
            "404": {
              "description": "the Metering Type was not found"
            }
          }
        }
      },
      "/v1/PartTypes": {
        "get": {
          "tags": [
            "Parts"
          ],
          "summary": "Get a list of Part Types",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "Part_GetPartTypes",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PartTypeResponseModel"
              }
            }
          }
        }
      },
      "/v1/Parts": {
        "get": {
          "tags": [
            "Parts"
          ],
          "summary": "Get a list of parts",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "Part_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PartResponseModel"
              }
            }
          }
        }
      },
      "/v1/Part/id": {
        "get": {
          "tags": [
            "Parts"
          ],
          "summary": "Get a specific Part",
          "operationId": "Part_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Part id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Part was found",
              "schema": {
                "$ref": "#/definitions/PartResponseModel"
              }
            },
            "404": {
              "description": "the Part was not found"
            }
          }
        }
      },
      "/v1/Part": {
        "put": {
          "tags": [
            "Parts"
          ],
          "summary": "Update a Part",
          "operationId": "Part_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "updatePart",
              "in": "body",
              "description": "Details of Part",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdatePartModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the part is updated",
              "schema": {
                "$ref": "#/definitions/PartCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "some thing went wrong"
            }
          }
        },
        "post": {
          "tags": [
            "Parts"
          ],
          "summary": "Create a new Part",
          "operationId": "Part_Post",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "part",
              "in": "body",
              "description": "Details of new Part",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreatePartModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the part is created",
              "schema": {
                "$ref": "#/definitions/PartCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "some thing went wrong"
            }
          }
        }
      },
      "/v1/Company/PartCategory": {
        "get": {
          "tags": [
            "Part Category"
          ],
          "summary": "Get a paged list of PartCategory",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "PartCategory_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PartCategoryResponseModel"
              }
            }
          }
        },
        "put": {
          "tags": [
            "Part Category"
          ],
          "summary": "Update an existing Part Category",
          "operationId": "PartCategory_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "PartCategory",
              "in": "body",
              "description": "Details of Part Category",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdatePartCategory"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CreateUpdatePartCategory"
              }
            }
          }
        },
        "post": {
          "tags": [
            "Part Category"
          ],
          "summary": "Create a new Part Category",
          "operationId": "PartCategory_Create",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "PartCategory",
              "in": "body",
              "description": "Details of Part Category",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreatePartCategory"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/CreateUpdatePartCategory"
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Part Category"
          ],
          "summary": "Delete PartCategory of Part",
          "operationId": "PartCategory_DeletePartCategory",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "PartCategoryId",
              "in": "query",
              "description": "Id of PartCategory",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PageResult"
              }
            }
          }
        }
      },
      "/v1/Company/PartCategory/{id}": {
        "get": {
          "tags": [
            "Part Category"
          ],
          "summary": "Get a specific Part Category record",
          "operationId": "PartCategory_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Part category id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Part category was found",
              "schema": {
                "$ref": "#/definitions/PartCategoryResponseModel"
              }
            },
            "404": {
              "description": "the Part category was not found"
            }
          }
        }
      },
      "/v1/Company/PartStatuses": {
        "get": {
          "tags": [
            "Part Status"
          ],
          "summary": "Get a paged list of Parts Status",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "PartStatuses_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PartStatusResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/PartStatuses/{id}": {
        "get": {
          "tags": [
            "Part Status"
          ],
          "summary": "Get a specific Part Status record",
          "operationId": "PartStatuses_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "The Part Status id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Part Status was found",
              "schema": {
                "$ref": "#/definitions/PartStatusResponseModel"
              }
            },
            "404": {
              "description": "the Part Status was not found"
            }
          }
        }
      },
      "/v1/Company/POAddress": {
        "get": {
          "tags": [
            "PO Address"
          ],
          "summary": "Get Purchase Order Address",
          "operationId": "POAddress_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/POAddressModelAPI"
              }
            }
          }
        },
        "put": {
          "tags": [
            "PO Address"
          ],
          "summary": "Update an existing Purchase Order Address",
          "operationId": "POAddress_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "address",
              "in": "body",
              "description": "Details of Purchase Order Address",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdatePOAddress"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/POAddressAPIModel"
              }
            }
          }
        },
        "post": {
          "tags": [
            "PO Address"
          ],
          "summary": "Create a new Purchase Order Address",
          "operationId": "POAddress_Create",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "address",
              "in": "body",
              "description": "Details of Purchase Order Address",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreatePOAddress"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/POAddressAPIModel"
              }
            }
          }
        }
      },
      "/v1/Company/POAddress/id": {
        "get": {
          "tags": [
            "PO Address"
          ],
          "summary": "Get a specific PO Address",
          "operationId": "POAddress_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "POAddress Id",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the PO Address was found",
              "schema": {
                "$ref": "#/definitions/POAddressModelAPI"
              }
            },
            "404": {
              "description": "the PO Address was not found"
            }
          }
        }
      },
      "/v1/PurchaseOrderTemplate": {
        "get": {
          "tags": [
            "PO Templates"
          ],
          "summary": "Get a paged list of Purchase Order Template",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "POTemplate_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/POTemplateResponseModel"
              }
            }
          }
        }
      },
      "/v1/PurchaseOrderTemplate/id": {
        "get": {
          "tags": [
            "PO Templates"
          ],
          "summary": "Get a specific Purchase Order Template",
          "operationId": "POTemplate_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Purchase Order Template id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Purchase Order Template was found",
              "schema": {
                "$ref": "#/definitions/POTemplateResponseModel"
              }
            },
            "404": {
              "description": "the Purchase Order Template was not found"
            }
          }
        }
      },
      "/v1/PurchaseOrder": {
        "get": {
          "tags": [
            "Purchase Orders"
          ],
          "summary": "Get a paged list of Purchase Orders",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "PurchaseOrder_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PurchaseOrderResponseModel"
              }
            }
          }
        },
        "put": {
          "tags": [
            "Purchase Orders"
          ],
          "summary": "Update a Purchase Order",
          "operationId": "PurchaseOrder_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "purchaseOrder",
              "in": "body",
              "description": "Details of Purchase Order",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdatePurchaseOrder"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/POCreateUpdateResponseModel"
              }
            }
          }
        },
        "post": {
          "tags": [
            "Purchase Orders"
          ],
          "summary": "Create a new Purchase Order",
          "operationId": "PurchaseOrder_Post",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "purchaseOrder",
              "in": "body",
              "description": "Details of new Purchase Order",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreatePurchaseOrder"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the purchase order is created",
              "schema": {
                "$ref": "#/definitions/POCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "something went wrong"
            }
          }
        }
      },
      "/v1/PurchaseOrder/id": {
        "get": {
          "tags": [
            "Purchase Orders"
          ],
          "summary": "Get a specific Purchase Order",
          "operationId": "PurchaseOrder_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Purchase Order id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Purchase Order was found",
              "schema": {
                "$ref": "#/definitions/PurchaseOrderResponseModel"
              }
            },
            "404": {
              "description": "the Purchase Order was not found"
            }
          }
        }
      },
      "/v1/UpdatePurchaseOrderStatus": {
        "put": {
          "tags": [
            "Purchase Orders"
          ],
          "summary": "Update Status of Purchase Order",
          "operationId": "PurchaseOrder_Put",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "PurchaseOrderId",
              "in": "query",
              "description": "Purchase Order Id",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "SiteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "NewStatus",
              "in": "query",
              "description": "Status ID can be found in Purchase Order Status API",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/POCreateUpdateResponseModel"
              }
            }
          }
        }
      },
      "/v1/PurchaseOrderStatus": {
        "get": {
          "tags": [
            "Purchase Orders"
          ],
          "summary": "Get Purchase Order Statuses",
          "operationId": "PurchaseOrder_GetPOStatus",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PageResult"
              }
            }
          }
        }
      },
      "/v1/ServiceTypes": {
        "get": {
          "tags": [
            "Service Types"
          ],
          "summary": "Get a paged list of Service Types",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "ServiceType_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/ServiceTypesListResponseList"
              }
            }
          }
        }
      },
      "/v1/ServiceType/id": {
        "get": {
          "tags": [
            "Service Types"
          ],
          "summary": "Get a Service Type",
          "operationId": "ServiceType_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Service Type id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Service Type was found",
              "schema": {
                "$ref": "#/definitions/ServiceTypesListResponseList"
              }
            },
            "404": {
              "description": "the Service Type was not found"
            }
          }
        }
      },
      "/v1/ServiceType": {
        "put": {
          "tags": [
            "Service Types"
          ],
          "summary": "Update a service Type",
          "operationId": "ServiceType_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "updateServiceType",
              "in": "body",
              "description": "Details of service Type",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateServiceTypeModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The service Type is updated",
              "schema": {
                "$ref": "#/definitions/ServiceCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "some thing went wrong"
            }
          }
        },
        "post": {
          "tags": [
            "Service Types"
          ],
          "summary": "Create a new service Type",
          "operationId": "ServiceType_Post",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "ServiceType",
              "in": "body",
              "description": "Details of new service Type",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateServiceTypeModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The service Type is created",
              "schema": {
                "$ref": "#/definitions/ServiceCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "some thing went wrong"
            }
          }
        }
      },
      "/v1/Sites": {
        "get": {
          "tags": [
            "Sites"
          ],
          "summary": "Get a list of sites",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "Sites_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/SiteResponseModel"
              }
            }
          }
        }
      },
      "/v1/Sites/id": {
        "get": {
          "tags": [
            "Sites"
          ],
          "summary": "Get a specific site",
          "operationId": "Sites_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The site id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the site was found",
              "schema": {
                "$ref": "#/definitions/SiteResponseModel"
              }
            },
            "404": {
              "description": "the site was not found"
            }
          }
        }
      },
      "/v1/Tasks": {
        "get": {
          "tags": [
            "Tasks"
          ],
          "summary": "Get a paged list of Task Statuses",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "Task_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskReponseModel"
              }
            }
          }
        }
      },
      "/v1/Tasks/id": {
        "get": {
          "tags": [
            "Tasks"
          ],
          "summary": "Get a specific Task",
          "operationId": "Task_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The task id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the task was found",
              "schema": {
                "$ref": "#/definitions/TaskReponseModel"
              }
            },
            "404": {
              "description": "the task was not found"
            }
          }
        }
      },
      "/v1/Task": {
        "put": {
          "tags": [
            "Tasks"
          ],
          "summary": "Update an existing Task",
          "operationId": "Task_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "task",
              "in": "body",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateTaskModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskCreateUpdateResponseModel"
              }
            }
          }
        },
        "post": {
          "tags": [
            "Tasks"
          ],
          "summary": "Create a new Task",
          "operationId": "Task_Post",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "task",
              "in": "body",
              "description": "",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateTaskModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskCreateUpdateResponseModel"
              }
            }
          }
        }
      },
      "/v1/TaskField": {
        "get": {
          "tags": [
            "Task Fields"
          ],
          "summary": "Get Fields associated with a Task",
          "operationId": "TaskField_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "taskId",
              "in": "query",
              "description": "Task Id can be from Task Index or Task API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskTemplateFieldResponseModel"
              }
            }
          }
        },
        "put": {
          "tags": [
            "Task Fields"
          ],
          "summary": "Update Task Field",
          "operationId": "TaskField_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "updateTaskField",
              "in": "body",
              "description": "Details of Task Field",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateTaskTemplateField"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskFieldCreateUpdateResponseModel"
              }
            }
          }
        },
        "post": {
          "tags": [
            "Task Fields"
          ],
          "summary": "Create new Field for a Task",
          "operationId": "TaskField_Create",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "taskField",
              "in": "body",
              "description": "Details of Field",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateTaskTemplateField"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskFieldCreateUpdateResponseModel"
              }
            }
          }
        }
      },
      "/v1/TaskField/Id": {
        "get": {
          "tags": [
            "Task Fields"
          ],
          "summary": "Get Field associated with a Task",
          "operationId": "TaskField_GetById",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "Field Id of Task",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskTemplateFieldResponseModel"
              }
            }
          }
        }
      },
      "/v1/TaskPriorities": {
        "get": {
          "tags": [
            "Task Priority"
          ],
          "summary": "Get a paged list of Task Priority",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "TaskPriorities_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskProrityResponseModel"
              }
            }
          }
        }
      },
      "/v1/TaskStatuses": {
        "get": {
          "tags": [
            "Task Status"
          ],
          "summary": "Get a paged list of Task Statuses",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "TaskStatuses_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/TaskStatusResponseModel"
              }
            }
          }
        }
      },
      "/v1/Users": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get list of Users",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "User_GetUsers",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "disabled",
              "in": "query",
              "description": "True option provides all the Users. False will provide only Enabled Users",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/UserListResponseModel"
              }
            }
          }
        }
      },
      "/v1/UserById/id": {
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get a specific User",
          "operationId": "User_GetUserById",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The User id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the User was found",
              "schema": {
                "$ref": "#/definitions/UserListResponseModel"
              }
            },
            "404": {
              "description": "the User was not found"
            }
          }
        }
      },
      "/v1/Vendors": {
        "get": {
          "tags": [
            "Vendor"
          ],
          "summary": "Get list of Vendors",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "Vendor_GetVendors",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/VendorsListResponseModel"
              }
            }
          }
        }
      },
      "/v1/Vendors/id": {
        "get": {
          "tags": [
            "Vendor"
          ],
          "summary": "Get a specific Vendor",
          "operationId": "Vendor_GetVendorById",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "Vendor ID can be found in your Maxpanda Vendor index or Vendor API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the location was found",
              "schema": {
                "$ref": "#/definitions/VendorsListResponseModel"
              }
            },
            "404": {
              "description": "the location was not found"
            }
          }
        }
      },
      "/v1/Vendor": {
        "put": {
          "tags": [
            "Vendor"
          ],
          "summary": "Update an existing vendor.",
          "operationId": "Vendor_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "vendor",
              "in": "body",
              "description": "The Vendor to be updated",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateVendorModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The vendor was updated",
              "schema": {
                "$ref": "#/definitions/VendorCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "The vendor was not found, update failed"
            }
          }
        },
        "post": {
          "tags": [
            "Vendor"
          ],
          "summary": "Create a new Vendor",
          "operationId": "Vendor_Post",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "vendor",
              "in": "body",
              "description": "The Vendor to be added",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateVendorModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/VendorCreateUpdateResponseModel"
              }
            }
          }
        }
      },
      "/v1/VendorInvoices": {
        "get": {
          "tags": [
            "Vendor Invoices"
          ],
          "summary": "Get a paged list of Vendor Invoice",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "VendorInvoice_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/InvoiceResponseModel"
              }
            }
          }
        }
      },
      "/v1/VendorInvoice/id": {
        "get": {
          "tags": [
            "Vendor Invoices"
          ],
          "summary": "Get a specific Vendor Invoice",
          "operationId": "VendorInvoice_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Vendor Invoice id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Vendor Invoice was found",
              "schema": {
                "$ref": "#/definitions/InvoiceResponseModel"
              }
            },
            "404": {
              "description": "the Vendor Invoice was not found"
            }
          }
        }
      },
      "/v1/VendorInvoice": {
        "put": {
          "tags": [
            "Vendor Invoices"
          ],
          "summary": "Update an Invoice",
          "operationId": "VendorInvoice_Put",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "updateInvoice",
              "in": "body",
              "description": "Details of the Invoice",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateInvoiceModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the Vendor Invoice was created",
              "schema": {
                "$ref": "#/definitions/InvoiceCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "some thing went wrong"
            }
          }
        },
        "post": {
          "tags": [
            "Vendor Invoices"
          ],
          "summary": "Create an Invoice",
          "operationId": "VendorInvoice_Post",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "invoice",
              "in": "body",
              "description": "Details of the new invoice",
              "required": true,
              "schema": {
                "$ref": "#/definitions/CreateInvoiceModel"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "the Vendor Invoice was created",
              "schema": {
                "$ref": "#/definitions/InvoiceCreateUpdateResponseModel"
              }
            },
            "404": {
              "description": "some thing went wrong"
            }
          }
        }
      },
      "/v1/Company/WorkorderCategories": {
        "get": {
          "tags": [
            "Work Order Category"
          ],
          "summary": "Get a paged list of Workorder Categories",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "WorkOrderCategories_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/WorkOrderCategoryResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/WorkorderCategory/id": {
        "get": {
          "tags": [
            "Work Order Category"
          ],
          "summary": "Get a specific Workorder Category record",
          "operationId": "WorkOrderCategories_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The Workorder Category id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Workorder Category was found",
              "schema": {
                "$ref": "#/definitions/WorkOrderCategoryResponseModel"
              }
            },
            "404": {
              "description": "the Workorder Category was not found"
            }
          }
        }
      },
      "/v1/Company/WorkOrderPriorities": {
        "get": {
          "tags": [
            "Work Order Priority"
          ],
          "summary": "Get a paged list of WorkOrder Priorities",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "WorkOrderPriorities_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/WorkOrderPriorityResponseModel"
              }
            }
          }
        }
      },
      "/v1/Company/WorkOrderPriority/id": {
        "get": {
          "tags": [
            "Work Order Priority"
          ],
          "summary": "Get a specific WorkOrder Priority record",
          "operationId": "WorkOrderPriorities_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "The WorkOrder Priority id to retrieve",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the Workorder Priority was found",
              "schema": {
                "$ref": "#/definitions/WorkOrderPriorityResponseModel"
              }
            },
            "404": {
              "description": "the Workorder Priority was not found"
            }
          }
        }
      },
      "/v1/WorkOrders": {
        "get": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Get a list of work orders",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records",
          "operationId": "WorkOrders_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "lastWeekActiveHours",
              "in": "query",
              "description": "Show staff's last week active hours",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/WorkorderListResponseList"
              }
            }
          }
        }
      },
      "/v1/WorkOrders/id": {
        "get": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Get a specific work order",
          "operationId": "WorkOrders_Get",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "query",
              "description": "Workorder Id",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            }
          ],
          "responses": {
            "200": {
              "description": "the work order was found",
              "schema": {
                "$ref": "#/definitions/WorkorderListResponseList"
              }
            },
            "404": {
              "description": "the work order was not found"
            }
          }
        }
      },
      "/v1/WorkOrderStatuses": {
        "get": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Get a list of work orders statues",
          "description": "The default list will return the first 25 records.  The NextPageUrl property will return the next page of records.",
          "operationId": "WorkOrders_GetWorkorderStatuses",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PagedResults"
              }
            }
          }
        }
      },
      "/v1/WorkOrder": {
        "post": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Submit a workorder",
          "operationId": "WorkOrders_CreateWorkorder",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "workOrder",
              "in": "body",
              "description": "Workorder details to be submitted",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Workorder"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/WorkOrderCreateUpdateResponseModel"
              }
            }
          }
        }
      },
      "/v1/WorkOrder/id": {
        "put": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Update a workorder",
          "operationId": "WorkOrders_UpdateWorkorder",
          "consumes": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml",
            "application/x-www-form-urlencoded"
          ],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "workOrder",
              "in": "body",
              "description": "Workorder details to be updated",
              "required": true,
              "schema": {
                "$ref": "#/definitions/UpdateWorkorder"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/WorkOrderCreateUpdateResponseModel"
              }
            }
          }
        }
      },
      "/v1/ChangeWorkOrderStatus": {
        "post": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Change status of workorder",
          "operationId": "WorkOrders_UpdateWorkorderStatus",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "SiteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "WorkorderId",
              "in": "query",
              "description": "Id of workorder",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "NewStatus",
              "in": "query",
              "description": "New status of workorder",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PageResult"
              }
            }
          }
        }
      },
      "/v1/WorkordersByUser": {
        "get": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Get list of workorders created by an User",
          "operationId": "WorkOrders_GetWorkOrdersByUser",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "SiteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "UserId",
              "in": "query",
              "description": "User ID can be found in your Maxpanda Users index or User API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PagedResults"
              }
            }
          }
        }
      },
      "/v1/DeleteWorkOrderTask": {
        "delete": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Delete Task of Workorder",
          "operationId": "WorkOrders_DeleteWorkOrderTask",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "WorkOrderId",
              "in": "query",
              "description": "Id of workorder",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "WorkOrderTaskId",
              "in": "query",
              "description": "Task Id of workorder",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "IdCompany",
              "in": "query",
              "description": "Company Id",
              "required": true,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/PageResult"
              }
            }
          }
        }
      },
      "/v1/WorkOrdersByWorkOrderStatus": {
        "get": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Get Workorders by Status",
          "operationId": "WorkOrders_GetWorkOrdersByStatus",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "Status",
              "in": "query",
              "description": "Status ID can be found in your WorkOrderStatuses API",
              "required": true,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/WorkorderListResponseList"
              }
            }
          }
        }
      },
      "/v1/ToDo": {
        "get": {
          "tags": [
            "Work Orders"
          ],
          "summary": "Get Users To Do WorkOrder List",
          "operationId": "WorkOrders_GetToDO",
          "consumes": [],
          "produces": [
            "application/json",
            "text/json",
            "text/html",
            "application/xml",
            "text/xml"
          ],
          "parameters": [
            {
              "name": "requestCompleteInformation",
              "in": "query",
              "description": "True option provides all the data fields. False will only return required fields",
              "required": true,
              "type": "boolean"
            },
            {
              "name": "siteId",
              "in": "query",
              "description": "Site ID can be found in your Maxpanda Site index or Sites API",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "page",
              "in": "query",
              "description": "Page number to start retrieving data (similar to List View pagification)",
              "required": false,
              "type": "integer",
              "format": "int32"
            },
            {
              "name": "pageSize",
              "in": "query",
              "description": "Number of records per page (max=100)",
              "required": false,
              "type": "integer",
              "format": "int32"
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/WorkorderListResponseList"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "AssetStatusResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetStatus"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "AssetStatus": {
        "type": "object",
        "properties": {
          "AssetStatusId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          }
        }
      },
      "SiteRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "AssetResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetList"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "AssetList": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "$ref": "#/definitions/SiteRef"
          },
          "AssetId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Model": {
            "type": "string"
          },
          "AssetTypeRef": {
            "$ref": "#/definitions/AssetTypeRef"
          },
          "AssetStatusRef": {
            "$ref": "#/definitions/AssetStatusRef"
          },
          "AssetTag": {
            "type": "string"
          },
          "SerialNumber": {
            "type": "string"
          },
          "Manufacture": {
            "type": "string"
          },
          "ManufactureInfo": {
            "type": "string"
          },
          "PreferredSupplier": {
            "$ref": "#/definitions/VendorRef"
          },
          "VendorInfo": {
            "type": "string"
          },
          "InstallationDate": {
            "format": "date-time",
            "type": "string"
          },
          "WarrantyDate": {
            "format": "date-time",
            "type": "string"
          },
          "WarrantyNotesLabor": {
            "type": "string"
          },
          "WarrantyNotesParts": {
            "type": "string"
          },
          "Notes": {
            "type": "string"
          },
          "IpMacAddress": {
            "type": "string"
          },
          "BuildingGroupRef": {
            "$ref": "#/definitions/DepartmentRef"
          },
          "BuildingRef": {
            "$ref": "#/definitions/BuildingRef"
          },
          "LocationRef": {
            "$ref": "#/definitions/LocationRef"
          },
          "UserRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetStaffRef"
            }
          },
          "PartRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PartRef"
            }
          },
          "MeteringTypeRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MerteringRef"
            }
          },
          "AssetAuditsRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetAuditModel"
            }
          }
        }
      },
      "AssetTypeRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "AssetStatusRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "VendorRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "DepartmentRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "BuildingRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "LocationRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "AssetStaffRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "PartRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "MerteringRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "AssetAuditModel": {
        "type": "object",
        "properties": {
          "AssetAuditId": {
            "format": "int32",
            "type": "integer"
          },
          "AssignedTo": {
            "$ref": "#/definitions/UserRef"
          },
          "AssignedBy": {
            "$ref": "#/definitions/UserRef"
          },
          "ReleasedBy": {
            "$ref": "#/definitions/UserRef"
          },
          "AllocatedOn": {
            "format": "date-time",
            "type": "string"
          },
          "ReleasedOn": {
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "UserRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "Asset": {
        "required": [
          "siteId",
          "Name",
          "AssetTypeId",
          "AssetStatusId"
        ],
        "type": "object",
        "properties": {
          "siteId": {
            "format": "int32",
            "description": "Site Id of the Asset. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the Asset.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "Description": {
            "description": "Description of Asset.",
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "Model": {
            "description": "Model details of Asset",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "AssetTypeId": {
            "format": "int32",
            "description": "Asset Type Id of the Asset. Asset Type Id can be found in your Maxpanda Company Asset Type Index or Asset Type Api",
            "type": "integer"
          },
          "AssetStatusId": {
            "format": "int32",
            "description": "Asset Status Id of the Asset. Asset Status Id can be found in your Maxpanda Company Asset Status Index or Asset Status Api",
            "type": "integer"
          },
          "AssetTag": {
            "description": "Tag details of the Asset.",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "SerialNumber": {
            "description": "Serial Number of the Asset",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Manufacturer": {
            "description": "Manufacturer details of the Asset.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "ManufacturerInfo": {
            "description": "Information of Manufacturer.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "PreferredVendorId": {
            "format": "int32",
            "description": "Id of Preferred Vendor for the Asset. Preferred Vendor Id can be found in your Maxpanda Vendor Index or Vendor Api",
            "type": "integer"
          },
          "VendorInfo": {
            "description": "Information about the vendor.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "InstallationDate": {
            "format": "date-time",
            "description": "Installation date of Asset",
            "type": "string"
          },
          "WarrantyDate": {
            "format": "date-time",
            "description": "Warrenty date of Asset",
            "type": "string"
          },
          "WarrantyNotesParts": {
            "description": "Warranty Notes for Parts",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "WarrantyNotesLabor": {
            "description": "Warranty Notes for Labor",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "AddCC": {
            "description": "Addition Email recievers",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "Notes": {
            "description": "Notes of the Asset",
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "IpMacAddress": {
            "description": "IP / Mac Address of the Asset",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "IsMobileAsset": {
            "description": "Assets which are movable or can be moved from one location to another are called Mobile Assets",
            "type": "boolean"
          },
          "BuildingGroupId": {
            "format": "int32",
            "description": "Building group of the Asset. Building Group Id can be found in your Maxpanda company Building Group or Department Api",
            "type": "integer"
          },
          "BuildingId": {
            "format": "int32",
            "description": "Building of the Asset. Building Id can be found in your Maxpanda Building index or Building Api",
            "type": "integer"
          },
          "LocationId": {
            "format": "int32",
            "description": "Location of the Asset. Location Id can be found in your Maxpanda Location index or Location Api",
            "type": "integer"
          },
          "AssignedUserId": {
            "format": "int32",
            "description": "Currently assigned user of the Asset. User Id can be found in your Maxpanda User index or User Api",
            "type": "integer"
          },
          "PurchaseCost": {
            "format": "double",
            "description": "Purchase cost of the Asset",
            "type": "number"
          },
          "SalvageCost": {
            "format": "double",
            "description": "Salvage cost of the Asset",
            "type": "number"
          },
          "UsefulLifeInYears": {
            "format": "double",
            "description": "Number of years this Asset can be used",
            "type": "number"
          },
          "DepreciationRate": {
            "format": "double",
            "description": "Rate of Deprecation of the Asset",
            "type": "number"
          },
          "PartsIds": {
            "description": "Parts of the Asset. Parts Id can be found in your Maxpanda Inventory Part Index or Parts Api",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "MeteringIds": {
            "description": "Metering type of the Asset. Metering Type Id can be found in your Maxpanda Company MeteringType or Metering Types Api",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "AssetCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateAssetModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateAssetModel": {
        "type": "object",
        "properties": {
          "AssetId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdateAsset": {
        "required": [
          "siteId",
          "AssetId",
          "Name",
          "AssetTypeId",
          "AssetStatusId"
        ],
        "type": "object",
        "properties": {
          "siteId": {
            "format": "int32",
            "description": "Site Id of the Asset. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "AssetId": {
            "format": "int32",
            "description": "Id of the Asset. Asset Id can be found in your Maxpanda Asset Index or Assets API",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the Asset.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "Description": {
            "description": "Description of Asset.",
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "Model": {
            "description": "Model details of Asset",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "AssetTypeId": {
            "format": "int32",
            "description": "Asset Type Id of the Asset. Asset Type Id can be found in your Maxpanda Company Asset Type Index or Asset Type Api",
            "type": "integer"
          },
          "AssetStatusId": {
            "format": "int32",
            "description": "Asset Status Id of the Asset. Asset Status Id can be found in your Maxpanda Company Asset Status Index or Asset Status Api",
            "type": "integer"
          },
          "AssetTag": {
            "description": "Tag details of the Asset.",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "SerialNumber": {
            "description": "Serial Number of the Asset",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Manufacturer": {
            "description": "Manufacturer details of the Asset.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "ManufacturerInfo": {
            "description": "Information of Manufacturer.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "PreferredVendorId": {
            "format": "int32",
            "description": "Id of Preferred Vendor for the Asset. Preferred Vendor Id can be found in your Maxpanda Vendor Index or Vendor Api",
            "type": "integer"
          },
          "VendorInfo": {
            "description": "Information of Vendor.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "InstallationDate": {
            "format": "date-time",
            "description": "Installation date of Asset",
            "type": "string"
          },
          "WarrantyDate": {
            "format": "date-time",
            "description": "Warrenty date of Asset",
            "type": "string"
          },
          "WarrantyNotesParts": {
            "description": "Warranty Notes for Parts",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "WarrantyNotesLabor": {
            "description": "Warranty Notes for Labor",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "AddCC": {
            "description": "Addition Email recievers",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "Notes": {
            "description": "Notes of the Asset",
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "IpMacAddress": {
            "description": "IP / Mac Address of the Asset",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "IsMobileAsset": {
            "description": "Assets which are movable or can be moved from one location to another are called Mobile Assets",
            "type": "boolean"
          },
          "BuildingGroupId": {
            "format": "int32",
            "description": "Building group of the Asset. Building Group Id can be found in your Maxpanda company Building Group or Department Api",
            "type": "integer"
          },
          "BuildingId": {
            "format": "int32",
            "description": "Building of the Asset. Building Id can be found in your Maxpanda Building index or Building Api",
            "type": "integer"
          },
          "LocationId": {
            "format": "int32",
            "description": "Location of the Asset. Location Id can be found in your Maxpanda Location index or Location Api",
            "type": "integer"
          },
          "AssignedUserId": {
            "format": "int32",
            "description": "Currently assigned user of the Asset. User Id can be found in your Maxpanda User index or User Api",
            "type": "integer"
          },
          "PurchaseCost": {
            "format": "double",
            "description": "Purchase cost of the Asset",
            "type": "number"
          },
          "SalvageCost": {
            "format": "double",
            "description": "Salvage cost of the Asset",
            "type": "number"
          },
          "UsefulLifeInYears": {
            "format": "double",
            "description": "Number of years this Asset can be used",
            "type": "number"
          },
          "DepreciationRate": {
            "format": "double",
            "description": "Rate of Deprecation of the Asset",
            "type": "number"
          },
          "PartsIds": {
            "description": "Parts of the Asset. Parts Id can be found in your Maxpanda Inventory Part Index or Parts Api",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "MeteringIds": {
            "description": "Metering type of the Asset. Metering Type Id can be found in your Maxpanda Company MeteringType or Metering Types Api",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "AssetTypeResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetType"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "AssetType": {
        "type": "object",
        "properties": {
          "AssetTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          },
          "WOThresholdPeriod": {
            "format": "int32",
            "type": "integer"
          },
          "WOThresholdLimit": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BinResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Bin"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "Bin": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          },
          "BinId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "BinNumber": {
            "type": "string"
          },
          "BuildingRef": {
            "$ref": "#/definitions/BuildingRef"
          },
          "LocationRef": {
            "$ref": "#/definitions/LocationRef"
          },
          "PartsRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PartRef"
            }
          },
          "Notes": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          }
        }
      },
      "CreateBinModel": {
        "required": [
          "Name",
          "Sites"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "description": "Name of the Bin",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "BinNumber": {
            "description": "Number associated with Bin",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Sites": {
            "description": "Site Id of the Bin. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "BuildingId": {
            "format": "int32",
            "description": "Building of the Bin. Building Id can be found in your Maxpanda Building index or Building Api",
            "type": "integer"
          },
          "LocationId": {
            "format": "int32",
            "description": "Location of the Bin. Location Id can be found in your Maxpanda Location index or Location Api",
            "type": "integer"
          },
          "Notes": {
            "description": "Notes of the Asset",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "Description": {
            "description": "Description of Asset.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "SendReorderEmail": {
            "description": "Send Email for Reorder",
            "type": "boolean"
          }
        }
      },
      "BinCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateBinModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateBinModel": {
        "type": "object",
        "properties": {
          "BinId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdateBinModel": {
        "required": [
          "BinId",
          "Name",
          "Sites"
        ],
        "type": "object",
        "properties": {
          "BinId": {
            "format": "int32",
            "description": "Id of the Bin. Bin Id can be found in your Maxpanda Bin index or Bin Api",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the Bin",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "BinNumber": {
            "description": "Number associated with Bin",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Sites": {
            "description": "Site Id of the Bin. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "BuildingId": {
            "format": "int32",
            "description": "Building of the Bin. Building Id can be found in your Maxpanda Building index or Building Api",
            "type": "integer"
          },
          "LocationId": {
            "format": "int32",
            "description": "Location of the Bin. Location Id can be found in your Maxpanda Location index or Location Api",
            "type": "integer"
          },
          "Notes": {
            "description": "Notes of the Asset",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "Description": {
            "description": "Description of Asset.",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "PartsId": {
            "description": "Parts of the Bin. Part Id can be found in your Maxpanda Part index or Part Api",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "SendReorderEmail": {
            "description": "Send Email for Reorder",
            "type": "boolean"
          }
        }
      },
      "BuildingResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BuildingList"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "BuildingList": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "$ref": "#/definitions/SiteRef"
          },
          "BuildingId": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "AccountNumber": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "BuildingGroupRef": {
            "$ref": "#/definitions/DepartmentRef"
          },
          "BuildingAddress": {
            "$ref": "#/definitions/Address"
          },
          "LocationRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocationRef"
            }
          }
        }
      },
      "Address": {
        "required": [
          "AddressId"
        ],
        "type": "object",
        "properties": {
          "AddressId": {
            "format": "int32",
            "type": "integer"
          },
          "AddressLine1": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "AddressLine2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "City": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Region": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "PostalCode": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "BuildingUpdateModel": {
        "required": [
          "SiteId",
          "BuildingId",
          "Name"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Building. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "BuildingId": {
            "format": "int32",
            "description": "Id of the Building. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the Building",
            "type": "string"
          },
          "AccountNumber": {
            "description": "Account Number about the Building",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "Description": {
            "description": "Description about the Building",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "BuildingGroupId": {
            "format": "int32",
            "description": "Building group of the Building. Building Group Id can be found in your Maxpanda company Building Group or Department Api",
            "type": "integer"
          },
          "BuildingAddress": {
            "$ref": "#/definitions/Address",
            "description": "Address of the Building"
          },
          "LocationsId": {
            "description": "Locations of the Building. Location Id can be found in your Maxpanda Location index or Location Api",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "Archived": {
            "description": "",
            "type": "boolean"
          }
        }
      },
      "BuildingCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateBuildingModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateBuildingModel": {
        "type": "object",
        "properties": {
          "BuildingId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BuildingCreateModel": {
        "required": [
          "SiteId",
          "Name"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Asset. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the Building",
            "type": "string"
          },
          "AccountNumber": {
            "description": "Account Number about the Building",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "Description": {
            "description": "Description about the Building",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "BuildingGroupId": {
            "format": "int32",
            "description": "Building group of the Building. Building Group Id can be found in your Maxpanda company Building Group or Department Api",
            "type": "integer"
          },
          "BuildingAddress": {
            "$ref": "#/definitions/APIAddressModel",
            "description": "Address of the Building"
          },
          "LocationsId": {
            "description": "Locations of the Building. Location Id can be found in your Maxpanda Location index or Location Api",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "Archived": {
            "description": "",
            "type": "boolean"
          }
        }
      },
      "APIAddressModel": {
        "type": "object",
        "properties": {
          "AddressLine1": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "AddressLine2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "City": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Region": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "PostalCode": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "CreateCustomerModel": {
        "required": [
          "SitesId",
          "FirstName",
          "LastName",
          "Email"
        ],
        "type": "object",
        "properties": {
          "SitesId": {
            "description": "Site Ids of the Customer. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "FirstName": {
            "description": "First Name of the Customer",
            "type": "string"
          },
          "LastName": {
            "description": "Last Name of the Customer",
            "type": "string"
          },
          "Email": {
            "description": "Email address of the Customer",
            "type": "string"
          },
          "AccountNumber": {
            "description": "Account # of the Customer",
            "type": "string"
          },
          "ContractDate": {
            "format": "date-time",
            "description": "Contract Date of the Customer",
            "type": "string"
          },
          "MinWeeklyHours": {
            "format": "double",
            "description": "Min Weekly Hours of the Customer",
            "type": "number"
          },
          "MaxWeeklyHours": {
            "format": "double",
            "description": "Max Weekly Hours of the Customer",
            "type": "number"
          },
          "TotalHours": {
            "format": "double",
            "description": "Total Hours of the Customer",
            "type": "number"
          },
          "CompanyName": {
            "description": "Phone number of customer.",
            "type": "string"
          },
          "PhoneNumber": {
            "description": "Phone Number of the Customer",
            "type": "string"
          },
          "MobileNumber": {
            "description": "Mobile Number of the Customer",
            "type": "string"
          },
          "Fax": {
            "description": "Fax Number of the Customer",
            "type": "string"
          },
          "Other": {
            "description": "Othe details of the Customer",
            "type": "string"
          },
          "WebSite": {
            "description": "Website address of the Customer",
            "type": "string"
          },
          "Notes": {
            "description": "Notes about the Customer",
            "type": "string"
          },
          "BillingAddress": {
            "$ref": "#/definitions/APIAddressModel",
            "description": "Customers Address of Billing"
          },
          "ShippingAddressSameAsBilling": {
            "description": "Use Customers Billing address as Shipping Address",
            "type": "boolean"
          },
          "ShippingAddress": {
            "$ref": "#/definitions/APIAddressModel",
            "description": "Customers Address of Shipping"
          }
        }
      },
      "CustomerCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateCustomerModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateCustomerModel": {
        "type": "object",
        "properties": {
          "CustomerId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdateCustomerModel": {
        "required": [
          "SitesId",
          "CustomerId",
          "FirstName",
          "LastName",
          "Email"
        ],
        "type": "object",
        "properties": {
          "SitesId": {
            "description": "Site Ids of the Customer. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "CustomerId": {
            "format": "int32",
            "description": "Id of the Customer. Customer Id can be found in your Maxpanda Customer Index or Customer API",
            "type": "integer"
          },
          "FirstName": {
            "description": "First Name of the Customer",
            "type": "string"
          },
          "LastName": {
            "description": "Last Name of the Customer",
            "type": "string"
          },
          "Email": {
            "description": "Email address of the Customer",
            "type": "string"
          },
          "AccountNumber": {
            "description": "Account # of the Customer",
            "type": "string"
          },
          "ContractDate": {
            "format": "date-time",
            "description": "Contract Date of the Customer",
            "type": "string"
          },
          "MinWeeklyHours": {
            "format": "double",
            "description": "Min Weekly Hours of the Customer",
            "type": "number"
          },
          "MaxWeeklyHours": {
            "format": "double",
            "description": "Max Weekly Hours of the Customer",
            "type": "number"
          },
          "TotalHours": {
            "format": "double",
            "description": "Total Hours of the Customer",
            "type": "number"
          },
          "CompanyName": {
            "description": "Phone number of customer.",
            "type": "string"
          },
          "PhoneNumber": {
            "description": "Phone number of the Customer",
            "type": "string"
          },
          "MobileNumber": {
            "description": "Mobile number of the Customer",
            "type": "string"
          },
          "Fax": {
            "description": "Fax number of the Customer",
            "type": "string"
          },
          "Other": {
            "description": "Othe details of the Customer",
            "type": "string"
          },
          "WebSite": {
            "description": "Website address of the Customer",
            "type": "string"
          },
          "Notes": {
            "description": "Notes about the Customer",
            "type": "string"
          },
          "BillingAddress": {
            "$ref": "#/definitions/Address",
            "description": "Customers Address of Billing"
          },
          "ShippingAddressSameAsBilling": {
            "description": "Use Customers Billing address as Shipping Address",
            "type": "boolean"
          },
          "ShippingAddress": {
            "$ref": "#/definitions/Address",
            "description": "Customers Address of Shipping"
          }
        }
      },
      "CustomerResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Customer"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "Customer": {
        "required": [
          "FirstName",
          "LastName",
          "Email"
        ],
        "type": "object",
        "properties": {
          "SiteRef": {
            "description": "Site to which access is allowed for customer.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          },
          "CustomerId": {
            "format": "int32",
            "description": "Customer's id.",
            "type": "integer"
          },
          "FirstName": {
            "description": "First Name of the customer.",
            "type": "string"
          },
          "LastName": {
            "description": "Last Name of the customer.",
            "type": "string"
          },
          "CompanyName": {
            "description": "Name of the company to which customer belongs to.",
            "type": "string"
          },
          "Email": {
            "description": "Email address of customer.",
            "type": "string"
          },
          "AccountNumber": {
            "description": "Account # of the Customer",
            "type": "string"
          },
          "ContractDate": {
            "format": "date-time",
            "description": "Contract Date of the Customer",
            "type": "string"
          },
          "MinWeeklyHours": {
            "format": "double",
            "description": "Min Weekly Hours of the Customer",
            "type": "number"
          },
          "MaxWeeklyHours": {
            "format": "double",
            "description": "Max Weekly Hours of the Customer",
            "type": "number"
          },
          "TotalHours": {
            "format": "double",
            "description": "Total Hours of the Customer",
            "type": "number"
          },
          "Phone": {
            "description": "Phone number of customer.",
            "type": "string"
          },
          "Mobile": {
            "description": "Mobile number of customer.",
            "type": "string"
          },
          "Notes": {
            "description": "Notes.",
            "type": "string"
          },
          "BillingAddress": {
            "$ref": "#/definitions/Address",
            "description": "Address on which the Bill's will be sent."
          },
          "ShippingAddress": {
            "$ref": "#/definitions/Address",
            "description": "Address on which the any product will be sent."
          },
          "ShippingAddressSameAsBilling": {
            "description": "If customer wants to have same address for Billing as well as Shipping.",
            "type": "boolean"
          }
        }
      },
      "InvoiceResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "InvoiceId": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "VendorRef": {
            "$ref": "#/definitions/VendorRef"
          },
          "InvoiceDate": {
            "format": "date-time",
            "type": "string"
          },
          "DueDate": {
            "format": "date-time",
            "type": "string"
          },
          "TotalAmount": {
            "format": "double",
            "type": "number"
          },
          "Description": {
            "type": "string"
          },
          "InvoiceTypeRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceItemTypeRef"
            }
          },
          "InvoiceTaxRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceTaxRef"
            }
          },
          "WorkorderRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkorderRef"
            }
          }
        }
      },
      "InvoiceItemTypeRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "ItemId": {
            "format": "int32",
            "type": "integer"
          },
          "Quantity": {
            "format": "double",
            "type": "number"
          },
          "UnitPrice": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "InvoiceTaxRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "WorkorderRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Title": {
            "type": "string"
          }
        }
      },
      "CreateCustomerInvoice": {
        "required": [
          "SiteId",
          "CustomerId",
          "InvoiceDate",
          "InvoiceItems",
          "InvoiceTaxes"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Customer Invoice. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "CustomerId": {
            "format": "int32",
            "description": "Id of the Customer. Customer Id can be found in your Maxpanda Customer Index or Customer API",
            "type": "integer"
          },
          "InvoiceNumber": {
            "description": "Invoice Number of Customer Invoice",
            "type": "string"
          },
          "Archived": {
            "description": "",
            "type": "boolean"
          },
          "InvoiceDate": {
            "format": "date-time",
            "description": "Date of Customer Invoice",
            "type": "string"
          },
          "DueDate": {
            "format": "date-time",
            "description": "Due date of Customer Invoice",
            "type": "string"
          },
          "InvoiceItems": {
            "description": "Details of Items of Customer Invoice",
            "type": "array",
            "items": {
              "$ref": "#/definitions/CreateInvoiceItemModel"
            }
          },
          "InvoiceTaxes": {
            "description": "Taxes applied on Customer Invoice",
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceTaxModel"
            }
          }
        }
      },
      "CreateInvoiceItemModel": {
        "required": [
          "InvoiceItemTypeId",
          "InvoiceItemTypeName"
        ],
        "type": "object",
        "properties": {
          "InvoiceItemTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceItemTypeName": {
            "type": "string"
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "UnitPrice": {
            "format": "double",
            "type": "number"
          },
          "Quantity": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "InvoiceTaxModel": {
        "required": [
          "InvoiceTaxId",
          "TaxRate"
        ],
        "type": "object",
        "properties": {
          "InvoiceTaxId": {
            "format": "int32",
            "type": "integer"
          },
          "TaxRate": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "InvoiceCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateInvoiceModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateInvoiceModel": {
        "type": "object",
        "properties": {
          "InvoiceId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdateCustomerInvoice": {
        "required": [
          "SiteId",
          "CustomerInvoiceId",
          "CustomerId",
          "InvoiceDate",
          "InvoiceItems",
          "InvoiceTaxes"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Customer Invoice. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "CustomerInvoiceId": {
            "format": "int32",
            "description": "Id of the Customer Invoice. Invoice Id can be found in your Maxpanda Customer Invoice Index or Customer Invoice API",
            "type": "integer"
          },
          "CustomerId": {
            "format": "int32",
            "description": "Id of the Customer. Customer Id can be found in your Maxpanda Customer Index or Customer API",
            "type": "integer"
          },
          "InvoiceNumber": {
            "description": "Invoice Number of Customer Invoice",
            "type": "string"
          },
          "Archived": {
            "description": "",
            "type": "boolean"
          },
          "InvoiceDate": {
            "format": "date-time",
            "description": "Date of Customer Invoice",
            "type": "string"
          },
          "DueDate": {
            "format": "date-time",
            "description": "Due date of Customer Invoice",
            "type": "string"
          },
          "InvoiceItems": {
            "description": "Details of Items of Customer Invoice",
            "type": "array",
            "items": {
              "$ref": "#/definitions/CreateInvoiceItemModel"
            }
          },
          "InvoiceTaxes": {
            "description": "Taxes applied on Customer Invoice",
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceTaxModel"
            }
          }
        }
      },
      "DepartmentResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Department"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "Department": {
        "type": "object",
        "properties": {
          "BuildingGroupId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          }
        }
      },
      "InvoiceItemTypeResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceItemType"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "InvoiceItemType": {
        "type": "object",
        "properties": {
          "InvoiceItemTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          }
        }
      },
      "InvoiceTaxResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceTax"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "InvoiceTax": {
        "type": "object",
        "properties": {
          "InvoiceTaxPreferenceId": {
            "format": "int32",
            "type": "integer"
          },
          "TaxName": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "TaxRate": {
            "format": "double",
            "type": "number"
          },
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          }
        }
      },
      "LocationResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Location"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "Location": {
        "required": [
          "SiteId",
          "Name",
          "LocationTypeId"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Location. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the Location.",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "LocationTypeId": {
            "format": "int32",
            "description": "Type of the Location. Location Type Id can be found in your Maxpanda Company Location Type or Location Type API",
            "type": "integer"
          },
          "BuildingId": {
            "format": "int32",
            "description": "Building Id of the Location. Building Id can be found in your Maxpanda Building Index or Buildings API",
            "type": "integer"
          },
          "Description": {
            "description": "Description about the Location",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "VendorsId": {
            "description": "Preferred Vendors of the Location. Vendor Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "ContactName": {
            "description": "Name of the contact person",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "PhoneNumber": {
            "description": "Contact number of Location",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "ContactEmail": {
            "description": "Contact Email",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "ExternalEmail": {
            "description": "Add external Email Recipients",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "Archive": {
            "description": "",
            "type": "boolean"
          },
          "CompanyAddress": {
            "$ref": "#/definitions/APIAddressModel",
            "description": "Address of Location"
          }
        }
      },
      "LocationCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateLocationModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateLocationModel": {
        "type": "object",
        "properties": {
          "LocationId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "LocationUpdateModel": {
        "required": [
          "SiteId",
          "LocationId",
          "Name",
          "LocationTypeId"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Location. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "LocationId": {
            "format": "int32",
            "description": "Id of the Location. Location Id can be found in your Maxpanda Location Index or Location API",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the Location.",
            "type": "string"
          },
          "LocationTypeId": {
            "format": "int32",
            "description": "Type of the Location. Location Type Id can be found in your Maxpanda Company Location Type or Location Type API",
            "type": "integer"
          },
          "BuildingId": {
            "format": "int32",
            "description": "Building Id of the Location. Building Id can be found in your Maxpanda Building Index or Buildings API",
            "type": "integer"
          },
          "Description": {
            "description": "Description about the Location",
            "type": "string"
          },
          "VendorsId": {
            "description": "Preferred Vendors of the Location. Vendor Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "ContactName": {
            "description": "Name of the contact person",
            "type": "string"
          },
          "PhoneNumber": {
            "description": "Contact number of Location",
            "type": "string"
          },
          "ContactEmail": {
            "description": "Contact Email",
            "type": "string"
          },
          "ExternalEmail": {
            "description": "Add external Email Recipients",
            "type": "string"
          },
          "Archive": {
            "description": "",
            "type": "boolean"
          },
          "CompanyAddress": {
            "$ref": "#/definitions/Address",
            "description": "Address of Location"
          }
        }
      },
      "LocationTypeResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocationType"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "LocationType": {
        "type": "object",
        "properties": {
          "LocationTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "WOThresholdPeriod": {
            "format": "int32",
            "type": "integer"
          },
          "WOThresholdLimit": {
            "format": "int32",
            "type": "integer"
          },
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          }
        }
      },
      "MeteringTypeResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/MeteringType"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "MeteringType": {
        "type": "object",
        "properties": {
          "MeteringTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          },
          "TaskRefs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskRef"
            }
          }
        }
      },
      "TaskRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "PartTypeResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PartType"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "PartType": {
        "type": "object",
        "properties": {
          "PartTypeValue": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "PartResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Part"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "Part": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "$ref": "#/definitions/SiteRef"
          },
          "PartId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "PartNumber": {
            "type": "string"
          },
          "PartStatusRef": {
            "$ref": "#/definitions/PartStatusRef"
          },
          "PatTypeRef": {
            "$ref": "#/definitions/PartTypeRef"
          },
          "PartCategoryRef": {
            "$ref": "#/definitions/PartCategoryRef"
          },
          "Manufacture": {
            "type": "string"
          },
          "ModelName": {
            "type": "string"
          },
          "UPC": {
            "type": "string"
          },
          "PreferredSupplierRef": {
            "$ref": "#/definitions/VendorRef"
          },
          "UnitPrice": {
            "format": "double",
            "type": "number"
          },
          "CurrentPartCost": {
            "format": "double",
            "type": "number"
          },
          "LastPartCost": {
            "format": "double",
            "type": "number"
          },
          "AveragePartCost": {
            "format": "double",
            "type": "number"
          },
          "OEM": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "OEM1": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "OEM2": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "OEM3": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "OEMSupplier1Ref": {
            "$ref": "#/definitions/VendorRef"
          },
          "OEMSupplier2Ref": {
            "$ref": "#/definitions/VendorRef"
          },
          "OEMSupplier3Ref": {
            "$ref": "#/definitions/VendorRef"
          },
          "QtyInBins": {
            "format": "double",
            "type": "number"
          },
          "QtyInInventory": {
            "format": "double",
            "type": "number"
          },
          "QtyAllocated": {
            "format": "double",
            "type": "number"
          },
          "QtyInTransit": {
            "format": "double",
            "type": "number"
          },
          "MinimumLevel": {
            "type": "string"
          },
          "MaximumLevel": {
            "type": "string"
          },
          "QtyOnOrder": {
            "format": "double",
            "type": "number"
          },
          "InstallationDate": {
            "format": "date-time",
            "type": "string"
          },
          "WarrantyDate": {
            "format": "date-time",
            "type": "string"
          },
          "WarrantyNotesParts": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "WarrantyNotesLabor": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "Notes": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "StorageLocationRef": {
            "$ref": "#/definitions/LocationRef"
          },
          "AssetRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetRef"
            }
          },
          "POTemplateRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/POTemplateRef"
            }
          },
          "BinsRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BinRef"
            }
          },
          "IsFrozen": {
            "type": "boolean"
          }
        }
      },
      "PartStatusRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "PartTypeRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "PartCategoryRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "AssetRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "POTemplateRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "BinRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "DecreaseQty": {
            "format": "double",
            "type": "number"
          },
          "PartsInBin": {
            "format": "double",
            "type": "number"
          },
          "MinimumLevel": {
            "format": "double",
            "type": "number"
          },
          "IncreaseQty": {
            "format": "double",
            "type": "number"
          },
          "ClosedWorkorderQty": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "CreatePartModel": {
        "required": [
          "SiteId",
          "PartName",
          "PartStatusId",
          "PartTypeId"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Part. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "PartName": {
            "description": "Name of the Part",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "PartNumber": {
            "description": "Number associated with Part",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "PartStatusId": {
            "format": "int32",
            "description": "Status of the Part. Part Status Id can be found in your Maxpanda Company Part Status or Part Status API",
            "type": "integer"
          },
          "PartTypeId": {
            "format": "int32",
            "description": "Type of the Part. Part Type Id can be found in your Maxpanda Company Part Type or Part Type API",
            "type": "integer"
          },
          "PartCategoryId": {
            "format": "int32",
            "description": "Category of the Part. Part Category Id can be found in your Maxpanda Company Part Category or Part Category API",
            "type": "integer"
          },
          "Manufracturer": {
            "description": "Part Manufracturer details",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "ModelName": {
            "description": "Part ModelName",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "UPC": {
            "description": "UPC details",
            "maxLength": 12,
            "minLength": 0,
            "type": "string"
          },
          "PreferredSupplierId": {
            "format": "int32",
            "description": "Preferred Supplier of the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "OEM1": {
            "description": "OEM 1 details",
            "type": "string"
          },
          "OEM2": {
            "description": "OEM 2 details",
            "type": "string"
          },
          "OEM3": {
            "description": "OEM 3 details",
            "type": "string"
          },
          "PreferredOEM1SupplierId": {
            "format": "int32",
            "description": "Preferred Supplier 1 for the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "PreferredOEM2SupplierId": {
            "format": "int32",
            "description": "Preferred Supplier 2 for the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "PreferredOEM3SupplierId": {
            "format": "int32",
            "description": "Preferred Supplier 3 for the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "SupplierInfo": {
            "description": "Information of Supplier of Part.",
            "type": "string"
          },
          "IncreaseQty": {
            "format": "double",
            "description": "Increase Quantity of Parts",
            "type": "number"
          },
          "DecreaseQty": {
            "format": "double",
            "description": "Decrease Quantity of Parts",
            "type": "number"
          },
          "PartCost": {
            "format": "double",
            "description": "Cost of the Part",
            "type": "number"
          },
          "SalesPrice": {
            "format": "double",
            "description": "Selling price of Part",
            "type": "number"
          },
          "MinimumLevel": {
            "format": "double",
            "description": "Minimum number of Parts",
            "type": "number"
          },
          "MaximumLevel": {
            "format": "double",
            "description": "Maximum number of Parts",
            "type": "number"
          },
          "Notes": {
            "description": "Notes about Parts",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "InstallationDate": {
            "format": "date-time",
            "description": "Date of Installation of Part",
            "type": "string"
          },
          "WarrantyDate": {
            "format": "date-time",
            "description": "Warranty Date of Part",
            "type": "string"
          },
          "WarrantyNotesLabour": {
            "description": "Warranty Notes for Labour",
            "type": "string"
          },
          "WarrantyNotesParts": {
            "description": "Warranty Notes for Part",
            "type": "string"
          },
          "StorageLocation": {
            "format": "int32",
            "description": "Storage location of Part. Location Id can be found in your Maxpanda Location Index or Location API",
            "type": "integer"
          },
          "AssignedAsset": {
            "description": "Part assigned to Assets. Asset Id can be found in your Maxpanda Asset Index or Asset API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "PartCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdatePartModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdatePartModel": {
        "type": "object",
        "properties": {
          "PartId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdatePartModel": {
        "required": [
          "SiteId",
          "PartId",
          "PartName",
          "PartStatusId",
          "PartTypeId"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Part. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "PartId": {
            "format": "int32",
            "description": "Id of the Part. Part Id can be found in your Maxpanda Inventory Part Index or Part API",
            "type": "integer"
          },
          "PartName": {
            "description": "Name of the Part",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "PartNumber": {
            "description": "Number associated with Part",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "PartStatusId": {
            "format": "int32",
            "description": "Status of the Part. Part Status Id can be found in your Maxpanda Company Part Status or Part Status API",
            "type": "integer"
          },
          "PartTypeId": {
            "format": "int32",
            "description": "Type of the Part. Part Type Id can be found in your Maxpanda Company Part Type or Part Type API",
            "type": "integer"
          },
          "PartCategoryId": {
            "format": "int32",
            "description": "Category of the Part. Part Category Id can be found in your Maxpanda Company Part Category or Part Category API",
            "type": "integer"
          },
          "Manufracturer": {
            "description": "Part Manufracturer details",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "ModelName": {
            "description": "Part ModelName",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "UPC": {
            "description": "UPC details",
            "maxLength": 12,
            "minLength": 0,
            "type": "string"
          },
          "PreferredSupplierId": {
            "format": "int32",
            "description": "Preferred Supplier of the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "OEM1": {
            "description": "OEM 1 details",
            "type": "string"
          },
          "OEM2": {
            "description": "OEM 2 details",
            "type": "string"
          },
          "OEM3": {
            "description": "OEM 3 details",
            "type": "string"
          },
          "PreferredOEM1SupplierId": {
            "format": "int32",
            "description": "Preferred Supplier 1 for the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "PreferredOEM2SupplierId": {
            "format": "int32",
            "description": "Preferred Supplier 2 for the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "PreferredOEM3SupplierId": {
            "format": "int32",
            "description": "Preferred Supplier for the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "SupplierInfo": {
            "description": "Information of Supplier of Part.",
            "type": "string"
          },
          "IncreaseQty": {
            "format": "double",
            "description": "Increase Quantity of Parts",
            "type": "number"
          },
          "DecreaseQty": {
            "format": "double",
            "description": "Descrease Quantity of Parts",
            "type": "number"
          },
          "PartCost": {
            "format": "double",
            "description": "Cost of the Part",
            "type": "number"
          },
          "SalesPrice": {
            "format": "double",
            "description": "Minimum number of Parts",
            "type": "number"
          },
          "MinimumLevel": {
            "format": "double",
            "description": "Minimum number of Parts",
            "type": "number"
          },
          "MaximumLevel": {
            "format": "double",
            "description": "Maximum number of Parts",
            "type": "number"
          },
          "Notes": {
            "description": "Notes about Part",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          },
          "InstallationDate": {
            "format": "date-time",
            "description": "Date of Installation of Part",
            "type": "string"
          },
          "WarrantyDate": {
            "format": "date-time",
            "description": "Warranty Date of Part",
            "type": "string"
          },
          "WarrantyNotesLabour": {
            "description": "Warranty Notes for Labour",
            "type": "string"
          },
          "WarrantyNotesParts": {
            "description": "Warranty Notes for Part",
            "type": "string"
          },
          "StorageLocation": {
            "format": "int32",
            "description": "Storage location of Part. Location Id can be found in your Maxpanda Location Index or Location API",
            "type": "integer"
          },
          "AssignedAsset": {
            "description": "Part assigned to Assets. Asset Id can be found in your Maxpanda Asset Index or Asset API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "BinPartsRef": {
            "description": "Part assigned to Bins.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/BinPartsRef"
            }
          },
          "PurchaseOrderTemplateId": {
            "format": "int32",
            "description": "Purchase Order of Part. Purchase Order Id can be found in your Maxpanda Accounting Purchase Order Index or Purchase Order API",
            "type": "integer"
          },
          "IsFrozen": {
            "type": "boolean"
          }
        }
      },
      "BinPartsRef": {
        "type": "object",
        "properties": {
          "BinId": {
            "format": "int32",
            "description": "Part assigned to Bins. Bin Id can be found in your Maxpanda Bin Index or Bin API",
            "type": "integer"
          },
          "IncreaseQty": {
            "format": "double",
            "description": "Add Parts into Bin from available quantity in the inventory. Increase Quantity should not be greater than available part quantity",
            "type": "number"
          },
          "DecreaseQty": {
            "format": "double",
            "description": "Remove Parts from Bin and move to available quantity in the inventory. Decrease Quantity should not be greater than quantity in bin",
            "type": "number"
          },
          "MinimumLevel": {
            "format": "double",
            "description": "Minimum level of parts in the bin",
            "type": "number"
          }
        }
      },
      "PartCategoryResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PartCategory"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "PartCategory": {
        "type": "object",
        "properties": {
          "PartCategoryId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "AccountNumber": {
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "type": "integer"
          },
          "Disabled": {
            "type": "boolean"
          },
          "AllowedSites": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          }
        }
      },
      "CreatePartCategory": {
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "AccountNumber": {
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "type": "integer"
          },
          "Disabled": {
            "type": "boolean"
          },
          "SitesAllowed": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "CreateUpdatePartCategory": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdatePartCategoryModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdatePartCategoryModel": {
        "type": "object",
        "properties": {
          "PartcategoryId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdatePartCategory": {
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "PartCategoryId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "AccountNumber": {
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "type": "integer"
          },
          "Disabled": {
            "type": "boolean"
          },
          "SitesAllowed": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "PageResult": {
        "type": "object",
        "properties": {
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "Results": {
            "description": "The records this page represents.",
            "type": "object"
          }
        }
      },
      "PartStatusResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PartStatus"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "PartStatus": {
        "type": "object",
        "properties": {
          "PartStatusId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          }
        }
      },
      "POAddressModelAPI": {
        "required": [
          "AddressId"
        ],
        "type": "object",
        "properties": {
          "SiteRef": {
            "$ref": "#/definitions/SiteRef"
          },
          "AddressId": {
            "format": "int32",
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "ShipTo": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "AddressLine1": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "AddressLine2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "City": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Region": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          },
          "POBox": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "SortOrder": {
            "type": "string"
          }
        }
      },
      "CreatePOAddress": {
        "required": [
          "SiteId",
          "Title",
          "AddressLine1",
          "City",
          "Region",
          "Country",
          "PostalCode"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Part. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "Title": {
            "description": "Title of Address",
            "type": "string"
          },
          "shipTo": {
            "description": "shipping To name",
            "type": "string"
          },
          "Email": {
            "description": "Email",
            "type": "string"
          },
          "Phone": {
            "description": "Phone",
            "type": "string"
          },
          "AddressLine1": {
            "type": "string"
          },
          "AddressLine2": {
            "description": "Second line of Address",
            "type": "string"
          },
          "City": {
            "description": "City",
            "type": "string"
          },
          "Region": {
            "description": "Region, State, Province",
            "type": "string"
          },
          "Country": {
            "description": "Country",
            "type": "string"
          },
          "PostalCode": {
            "description": "Postal code, Zip code",
            "type": "string"
          },
          "POBox": {
            "description": "PO Box",
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "description": "Order for sorting",
            "type": "integer"
          }
        }
      },
      "POAddressAPIModel": {
        "required": [
          "AddressId"
        ],
        "type": "object",
        "properties": {
          "SiteRef": {
            "$ref": "#/definitions/SiteRef"
          },
          "AddressId": {
            "format": "int32",
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "ShipTo": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "AddressLine1": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "AddressLine2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "City": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Region": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "PostalCode": {
            "type": "string"
          },
          "POBox": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "SortOrder": {
            "type": "string"
          }
        }
      },
      "UpdatePOAddress": {
        "required": [
          "SiteId",
          "AddressId",
          "Title",
          "AddressLine1",
          "City",
          "Region",
          "Country",
          "PostalCode"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Purchase Order Address. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "AddressId": {
            "format": "int32",
            "description": "Id of the Purchase Order Address. Purchase Order Address Id can be found in your Maxpanda Company PO Address or PO Address API",
            "type": "integer"
          },
          "Title": {
            "description": "Title of Address",
            "type": "string"
          },
          "ShipTo": {
            "description": "Shipping To Name",
            "type": "string"
          },
          "Email": {
            "description": "Email",
            "type": "string"
          },
          "Phone": {
            "description": "Phone",
            "type": "string"
          },
          "AddressLine1": {
            "type": "string"
          },
          "AddressLine2": {
            "description": "Second line of Address",
            "type": "string"
          },
          "City": {
            "description": "City",
            "type": "string"
          },
          "Region": {
            "description": "Region, State, Province",
            "type": "string"
          },
          "Country": {
            "description": "Country",
            "type": "string"
          },
          "PostalCode": {
            "description": "Postal code, Zip code",
            "type": "string"
          },
          "POBox": {
            "description": "PO Box",
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "description": "Order for sorting",
            "type": "integer"
          }
        }
      },
      "POTemplateResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/POTemplate"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "POTemplate": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "$ref": "#/definitions/SiteRef"
          },
          "PurchaseOrderTemplateId": {
            "format": "int32",
            "type": "integer"
          },
          "VendorRef": {
            "$ref": "#/definitions/VendorRef"
          },
          "Title": {
            "type": "string"
          },
          "Account": {
            "type": "string"
          },
          "ShippingAddress": {
            "$ref": "#/definitions/POAddress"
          },
          "RequestApproverRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/UserRef"
            }
          },
          "PrivateNotes": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "PurchaseOrderItemRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrderItemDetails"
            }
          }
        }
      },
      "POAddress": {
        "required": [
          "AddressId"
        ],
        "type": "object",
        "properties": {
          "AddressId": {
            "format": "int32",
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "ShipTo": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "AddressLine1": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "AddressLine2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "City": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Region": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Country": {
            "type": "string"
          },
          "PostalCode": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "PurchaseOrderItemDetails": {
        "type": "object",
        "properties": {
          "PurchaseOrderItemId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "PartNumber": {
            "type": "string"
          },
          "MfrPartNumber": {
            "type": "string"
          },
          "BinLocNum": {
            "type": "string"
          },
          "BinName": {
            "type": "string"
          },
          "UpdateBinQuantityToInventory": {
            "type": "boolean"
          },
          "UnitPrice": {
            "format": "double",
            "type": "number"
          },
          "OrderedQuantity": {
            "format": "double",
            "type": "number"
          },
          "TotalOrderedAmount": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "PurchaseOrderResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "PurchaseOrder": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "$ref": "#/definitions/SiteRef"
          },
          "Title": {
            "type": "string"
          },
          "PurchaseOrderId": {
            "format": "int32",
            "type": "integer"
          },
          "VendorRef": {
            "$ref": "#/definitions/VendorRef"
          },
          "StatusRef": {
            "$ref": "#/definitions/POStatusRef"
          },
          "Account": {
            "type": "string"
          },
          "ShippingAddress": {
            "$ref": "#/definitions/POAddress"
          },
          "RequestApproverRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/UserRef"
            }
          },
          "CreatedByUserRef": {
            "$ref": "#/definitions/UserRef"
          },
          "UpdatedByUserRef": {
            "$ref": "#/definitions/UserRef"
          },
          "CreatedOn": {
            "format": "date-time",
            "type": "string"
          },
          "Ordered": {
            "format": "date-time",
            "type": "string"
          },
          "Received": {
            "format": "date-time",
            "type": "string"
          },
          "AllItemPaid": {
            "type": "string"
          },
          "VendorConfirmed": {
            "type": "string"
          },
          "Notes": {
            "type": "string"
          },
          "PrivateNotes": {
            "type": "string"
          },
          "Comment": {
            "type": "string"
          },
          "PurchaseOrderItemRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrderItemDetails"
            }
          }
        }
      },
      "POStatusRef": {
        "type": "object",
        "properties": {
          "StatusValue": {
            "format": "int32",
            "type": "integer"
          },
          "StatusName": {
            "type": "string"
          }
        }
      },
      "CreatePurchaseOrder": {
        "required": [
          "SiteId",
          "VendorId",
          "Title",
          "ShippingAddressId",
          "RequestApproversId"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Purchase Order. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "VendorId": {
            "format": "int32",
            "description": "Vendor Id of the Purchase Order. Vendor Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "Title": {
            "description": "Title of Purchase Order",
            "type": "string"
          },
          "Account": {
            "description": "Account details",
            "type": "string"
          },
          "ShippingAddressId": {
            "format": "int32",
            "description": "Shipping Address Id of the Purchase Order. Shipping Id can be found in your Maxpanda Company PO Address or PO Address API",
            "type": "integer"
          },
          "RequestApproversId": {
            "description": "Approvers Id of the Purchase Order. User Id can be found in your Maxpanda User Index or User API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "Received": {
            "format": "date-time",
            "description": "Date of Item Receiving",
            "type": "string"
          },
          "Ordered": {
            "format": "date-time",
            "description": "Date of Item Order",
            "type": "string"
          },
          "Notes": {
            "description": "Notes about Purchase Order",
            "type": "string"
          },
          "Comment": {
            "description": "Comment",
            "type": "string"
          },
          "Items": {
            "description": "Parts ordered in Purchase Order.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrderItem"
            }
          }
        }
      },
      "PurchaseOrderItem": {
        "type": "object",
        "properties": {
          "PartId": {
            "format": "int32",
            "description": "Part to be ordered. Part Id can be found in your Maxpanda Inventory Parts Index or Parts API",
            "type": "integer"
          },
          "BinId": {
            "format": "int32",
            "description": "Bin where Part is kept. Bin Id can be found in your Maxpanda Inventory Bin Index or Bin API",
            "type": "integer"
          },
          "UnitPrice": {
            "format": "double",
            "description": "Unit price of Ordered Item.Unit Price can be modified in case of Pending and Approved Purchase Orders only.",
            "type": "number"
          },
          "OrderedQty": {
            "format": "double",
            "description": "Quantity of Items ordered. OrderedQty can be modified in case of Pending and Approved Purchase Orders only.",
            "type": "number"
          },
          "ReceivedQty": {
            "format": "double",
            "description": "Quantity Received. Quantity can be received only in case of OnOrdered Purchase Orders.",
            "type": "number"
          },
          "UpdateBinQuantityToInventory": {
            "description": "Bin Quantity Update. Update Bin Quantity to Inventory",
            "type": "boolean"
          }
        }
      },
      "POCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdatePOModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdatePOModel": {
        "type": "object",
        "properties": {
          "PurchaseOrderId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdatePurchaseOrder": {
        "required": [
          "SiteId",
          "PurchaseOrderId",
          "VendorId",
          "Title",
          "ShippingAddressId",
          "RequestApproversId",
          "Status"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Purchase Order. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "PurchaseOrderId": {
            "format": "int32",
            "description": "Id of the Purchase Order. Purchase Order Id can be found in your Maxpanda Accounting PO Index or Purchase Order API",
            "type": "integer"
          },
          "VendorId": {
            "format": "int32",
            "description": "Vendor Id of the Purchase Order. Vendor Id can be found in your Maxpanda Vendor Index or Vednor API",
            "type": "integer"
          },
          "Title": {
            "description": "Title of Purchase Order",
            "type": "string"
          },
          "Account": {
            "description": "Account details",
            "type": "string"
          },
          "ShippingAddressId": {
            "format": "int32",
            "description": "Shipping Address Id of the Purchase Order. Shipping Id can be found in your Maxpanda Company PO Address or PO Address API",
            "type": "integer"
          },
          "RequestApproversId": {
            "description": "Approvers Id of the Purchase Order. User Id can be found in your Maxpanda User Index or User API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "Received": {
            "format": "date-time",
            "description": "Date of Item Receiving",
            "type": "string"
          },
          "Ordered": {
            "format": "date-time",
            "description": "Date of Item Order",
            "type": "string"
          },
          "Notes": {
            "description": "Notes about Purchase Order",
            "type": "string"
          },
          "PrivateNotes": {
            "description": "Private Notes about Purchase Order",
            "type": "string"
          },
          "Comment": {
            "description": "Comment",
            "type": "string"
          },
          "Status": {
            "format": "int32",
            "description": "Status of Purchase Order. Purchase Order Status can be found in Purchase Order Status API",
            "type": "integer"
          },
          "SortOrder": {
            "format": "int32",
            "description": "Order of sorting",
            "type": "integer"
          },
          "PurchaseOrderItems": {
            "description": "Parts ordered in Purchase Order.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/PurchaseOrderItem"
            }
          },
          "AllItemsPaid": {
            "description": "Set Trus if All Items are Paid else set False",
            "type": "boolean"
          }
        }
      },
      "ServiceTypesListResponseList": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ServiceTypesList"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "ServiceTypesList": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "$ref": "#/definitions/SiteRef"
          },
          "ServiceTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "ServiceTypeStatusRef": {
            "$ref": "#/definitions/PartStatusRef"
          },
          "TypeRef": {
            "$ref": "#/definitions/PartTypeRef"
          },
          "PreferredSupplierRef": {
            "$ref": "#/definitions/VendorDetailsRef"
          },
          "UnitPrice": {
            "format": "double",
            "type": "number"
          },
          "SalesPrice": {
            "format": "double",
            "type": "number"
          },
          "Notes": {
            "type": "string"
          }
        }
      },
      "VendorDetailsRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "CreateServiceTypeModel": {
        "required": [
          "SiteId",
          "ServiceTypeName",
          "ServiceTypeStatusId",
          "TypeId"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Part. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "ServiceTypeName": {
            "description": "Name of the Part",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "ServiceTypeStatusId": {
            "format": "int32",
            "description": "Status of the Part. Part Status Id can be found in your Maxpanda Company Part Status or Part Status API",
            "type": "integer"
          },
          "TypeId": {
            "format": "int32",
            "description": "Type of the Part. Part Type Id can be found in your Maxpanda Company Part Type or Part Type API",
            "type": "integer"
          },
          "PreferredSupplierId": {
            "format": "int32",
            "description": "Preferred Supplier of the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "PartCost": {
            "format": "double",
            "description": "Cost of the Part",
            "type": "number"
          },
          "SalesPrice": {
            "format": "double",
            "description": "Selling price of Part",
            "type": "number"
          },
          "Notes": {
            "description": "Notes about Parts",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "ServiceCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateServiceTypeModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateServiceTypeModel": {
        "type": "object",
        "properties": {
          "ServiceTypeId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdateServiceTypeModel": {
        "required": [
          "SiteId",
          "ServiceTypeId",
          "ServiceTypeName",
          "ServiceTypeStatusId",
          "TypeId"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the Part. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "ServiceTypeId": {
            "format": "int32",
            "description": "Id of Service Type",
            "type": "integer"
          },
          "ServiceTypeName": {
            "description": "Name of the Part",
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "ServiceTypeStatusId": {
            "format": "int32",
            "description": "Status of the Part. Part Status Id can be found in your Maxpanda Company Part Status or Part Status API",
            "type": "integer"
          },
          "TypeId": {
            "format": "int32",
            "description": "Type of the Part. Part Type Id can be found in your Maxpanda Company Part Type or Part Type API",
            "type": "integer"
          },
          "PreferredSupplierId": {
            "format": "int32",
            "description": "Preferred Supplier of the Part. Supplier Id can be found in your Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "PartCost": {
            "format": "double",
            "description": "Cost of the Part",
            "type": "number"
          },
          "SalesPrice": {
            "format": "double",
            "description": "Selling price of Part",
            "type": "number"
          },
          "Notes": {
            "description": "Notes about Parts",
            "maxLength": 1000,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "SiteResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteList"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "SiteList": {
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "DepartmantRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/DepartmentRef"
            }
          },
          "BuildingRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BuildingRef"
            }
          },
          "LocationRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocationRef"
            }
          },
          "AssetRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetRef"
            }
          }
        }
      },
      "TaskReponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Task"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          },
          "TaskTemplateId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "PriorityRef": {
            "$ref": "#/definitions/TaskPriorityRef"
          },
          "Description": {
            "type": "string"
          },
          "TaskFieldRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskFieldRef"
            }
          }
        }
      },
      "TaskPriorityRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "TaskFieldRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "FieldName": {
            "type": "string"
          },
          "FieldType": {
            "format": "int32",
            "type": "integer"
          },
          "FieldTypeName": {
            "type": "string"
          },
          "IsRequired": {
            "type": "boolean"
          },
          "IsRangeDefined": {
            "type": "boolean"
          },
          "RangeMinValue": {
            "type": "string"
          },
          "RangeMaxValue": {
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "CreateTaskModel": {
        "required": [
          "Name",
          "SitesId",
          "Description",
          "Fields"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "description": "Name of the Task",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "TaskPriorityId": {
            "format": "int32",
            "description": "Priority of the Task. Task Priority Id can be found in your Maxpanda Company Task Priority or Task Priority API",
            "type": "integer"
          },
          "SitesId": {
            "description": "Site Id of the Task. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "Description": {
            "description": "Description about the Task",
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "Fields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CreateTaskField"
            }
          }
        }
      },
      "CreateTaskField": {
        "required": [
          "FieldName",
          "FieldType",
          "IsRequired"
        ],
        "type": "object",
        "properties": {
          "FieldName": {
            "description": "Name of the Task Field",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "FieldType": {
            "format": "int32",
            "description": "Type of the Task Field",
            "type": "integer"
          },
          "SortOrder": {
            "format": "int32",
            "description": "Order of Sorting",
            "type": "integer"
          },
          "IsRequired": {
            "description": "Set true if the field is mandatory",
            "type": "boolean"
          }
        }
      },
      "TaskCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateTaskModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateTaskModel": {
        "type": "object",
        "properties": {
          "TaskId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdateTaskModel": {
        "required": [
          "TaskId",
          "Name",
          "SitesId",
          "Description",
          "Fields"
        ],
        "type": "object",
        "properties": {
          "TaskId": {
            "format": "int32",
            "description": "Id of the Task. Task Id can be found in your Maxpanda Task Index or Task API",
            "type": "integer"
          },
          "Name": {
            "description": "Name of the Task",
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "TaskPriorityId": {
            "format": "int32",
            "description": "Priority of the Task. Task Priority Id can be found in your Maxpanda Company Task Priority or Task Priority API",
            "type": "integer"
          },
          "SitesId": {
            "description": "Site Id of the Task. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "Description": {
            "description": "Description about the Task",
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "Fields": {
            "description": "Fields",
            "type": "array",
            "items": {
              "$ref": "#/definitions/UpdateTaskField"
            }
          }
        }
      },
      "UpdateTaskField": {
        "required": [
          "TaskFieldId",
          "FieldName",
          "FieldType",
          "IsRequired"
        ],
        "type": "object",
        "properties": {
          "TaskFieldId": {
            "format": "int32",
            "description": "Id of Task Field.Task Field Id can be found in Task Field API.",
            "type": "integer"
          },
          "FieldName": {
            "description": "Name of the Task Field",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "FieldType": {
            "format": "int32",
            "description": "Type of the Task Field",
            "type": "integer"
          },
          "FieldValue": {
            "description": "Value of the Task Field",
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "description": "Order of Sorting",
            "type": "integer"
          },
          "IsRequired": {
            "description": "Set true if the field is mandatory",
            "type": "boolean"
          }
        }
      },
      "CreateTaskTemplateField": {
        "required": [
          "FieldName",
          "FieldType",
          "IsRequired",
          "TaskId"
        ],
        "type": "object",
        "properties": {
          "FieldName": {
            "description": "Name of the Task Field",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "FieldType": {
            "format": "int32",
            "description": "Type of the Task Field",
            "type": "integer"
          },
          "FieldValue": {
            "description": "Value of the Task Field",
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "description": "Order of Sorting",
            "type": "integer"
          },
          "IsRequired": {
            "description": "Set true if the field is mandatory",
            "type": "boolean"
          },
          "TaskId": {
            "format": "int32",
            "description": "Id of Task.Task Id can be found in your Maxpanda Task Library Index or Task API.",
            "type": "integer"
          }
        }
      },
      "TaskFieldCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateTaskFieldModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateTaskFieldModel": {
        "type": "object",
        "properties": {
          "TaskId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "TaskTemplateFieldResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "$ref": "#/definitions/TaskTemplateField"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "TaskTemplateField": {
        "type": "object",
        "properties": {
          "TaskTemplateFieldId": {
            "format": "int32",
            "type": "integer"
          },
          "FieldName": {
            "type": "string"
          },
          "FieldType": {
            "format": "int32",
            "type": "integer"
          },
          "FieldTypeName": {
            "type": "string"
          },
          "FieldValue": {
            "type": "string"
          },
          "IsRequired": {
            "type": "boolean"
          },
          "IsRangeDefined": {
            "type": "boolean"
          },
          "RangeMinValue": {
            "type": "string"
          },
          "RangeMaxValue": {
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdateTaskTemplateField": {
        "required": [
          "TaskFieldId",
          "FieldName",
          "FieldType",
          "IsRequired",
          "TaskId"
        ],
        "type": "object",
        "properties": {
          "TaskFieldId": {
            "format": "int32",
            "description": "Id of Task Field.Task Field Id can be found in Task Field API.",
            "type": "integer"
          },
          "FieldName": {
            "description": "Name of the Task Field",
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "FieldType": {
            "format": "int32",
            "description": "Type of the Task Field",
            "type": "integer"
          },
          "FieldValue": {
            "description": "Value of the Task Field",
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "description": "Order of Sorting",
            "type": "integer"
          },
          "IsRequired": {
            "description": "Set true if the field is mandatory",
            "type": "boolean"
          },
          "TaskId": {
            "format": "int32",
            "description": "Id of Task.Task Id can be found in your Maxpanda Task Library Index or Task API.",
            "type": "integer"
          }
        }
      },
      "TaskProrityResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskPriority"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "TaskPriority": {
        "type": "object",
        "properties": {
          "TaskPriorityId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "TaskStatusResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskStatus"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "TaskStatus": {
        "type": "object",
        "properties": {
          "TaskStatusId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "UserListResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/UsersList"
            }
          }
        }
      },
      "UsersList": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          },
          "UserId": {
            "format": "int32",
            "type": "integer"
          },
          "UserName": {
            "type": "string"
          },
          "FirstName": {
            "type": "string"
          },
          "LastName": {
            "type": "string"
          },
          "WeeklyCeilingWorkingHours": {
            "format": "double",
            "type": "number"
          },
          "Disabled": {
            "type": "string"
          },
          "AssetRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetRef"
            }
          }
        }
      },
      "VendorsListResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/VendorsListModel"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "VendorsListModel": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          },
          "VendorId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Phone": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Invited": {
            "type": "string"
          },
          "BuildingRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BuildingDetails"
            }
          },
          "LocationRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocationRef"
            }
          },
          "Notes": {
            "type": "string"
          },
          "ContractStartDate": {
            "format": "date-time",
            "type": "string"
          },
          "ContractEndDate": {
            "format": "date-time",
            "type": "string"
          },
          "VendorAddress": {
            "$ref": "#/definitions/AddressAPIModel"
          }
        }
      },
      "BuildingDetails": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "AddressAPIModel": {
        "type": "object",
        "properties": {
          "AddressId": {
            "format": "int32",
            "type": "integer"
          },
          "AddressLine1": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "AddressLine2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "City": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Region": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "PostalCode": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "Country": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "CreateVendorModel": {
        "required": [
          "Name",
          "Email"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "description": "Name of the Vendor",
            "type": "string"
          },
          "Phone": {
            "description": "Phone Number of Vendor",
            "type": "string"
          },
          "Email": {
            "description": "Email address of Vendor",
            "type": "string"
          },
          "Sites": {
            "description": "Site Ids of Vendor. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "Notes": {
            "description": "Notes about Vendor",
            "type": "string"
          },
          "ContractStartDate": {
            "format": "date-time",
            "description": "Date when Vendors Contract was Started",
            "type": "string"
          },
          "ContractEndDate": {
            "format": "date-time",
            "description": "Date when Vendors Contract will End",
            "type": "string"
          },
          "Address": {
            "$ref": "#/definitions/APIAddressModel",
            "description": "Address of Vendor"
          }
        }
      },
      "VendorCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateVendorModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateVendorModel": {
        "type": "object",
        "properties": {
          "VendorId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UpdateVendorModel": {
        "required": [
          "Name",
          "VendorId",
          "Email",
          "SitesId"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "description": "Name of the Vendor",
            "type": "string"
          },
          "VendorId": {
            "format": "int32",
            "description": "Id of the Vendor. Vendor Id can be found in Maxpanda Vendor Index or Vendor API",
            "type": "integer"
          },
          "Phone": {
            "description": "Phone Number of Vendor",
            "type": "string"
          },
          "Email": {
            "description": "Email address of Vendor",
            "type": "string"
          },
          "SitesId": {
            "description": "Site Ids of Vendor. Site Id can be found in Maxpanda Site Index or Sites API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "Notes": {
            "description": "Notes about Vendor",
            "type": "string"
          },
          "ContractStartDate": {
            "format": "date-time",
            "description": "Date when Vendors Contract was Started",
            "type": "string"
          },
          "ContractEndDate": {
            "format": "date-time",
            "description": "Date when Vendors Contract will End",
            "type": "string"
          },
          "Address": {
            "$ref": "#/definitions/Address",
            "description": "Address of Vendor"
          }
        }
      },
      "CreateInvoiceModel": {
        "required": [
          "VendorId",
          "Sites",
          "InvoiceNumber",
          "InvoiceDate",
          "InvoiceItems",
          "InvoiceTaxes",
          "CurrentSite"
        ],
        "type": "object",
        "properties": {
          "VendorId": {
            "format": "int32",
            "description": "Vendor ID can be found in your Maxpanda Vendor index or Vendor API",
            "type": "integer"
          },
          "Sites": {
            "description": "Site ID can be found in your Maxpanda Site index or Vendor API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "InvoiceNumber": {
            "description": "Invoice Number of Invoice",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "InvoiceDate": {
            "format": "date-time",
            "description": "Date on which Invoice was Raised",
            "type": "string"
          },
          "DueDate": {
            "format": "date-time",
            "description": "Due date of Invoice",
            "type": "string"
          },
          "Description": {
            "description": "Description of Invoice",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "InvoiceItems": {
            "description": "Details of Items of Invoice",
            "type": "array",
            "items": {
              "$ref": "#/definitions/CreateInvoiceItemModel"
            }
          },
          "InvoiceTaxes": {
            "description": "Taxes applied on Invoice",
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceTaxModel"
            }
          },
          "CurrentSite": {
            "format": "int32",
            "description": "Users current site",
            "type": "integer"
          }
        }
      },
      "UpdateInvoiceModel": {
        "required": [
          "VendorId",
          "InvoiceId",
          "InvoiceNumber",
          "InvoiceDate",
          "InvoiceTaxes",
          "CurrentSite"
        ],
        "type": "object",
        "properties": {
          "VendorId": {
            "format": "int32",
            "description": "Vendor ID can be found in your Maxpanda Vendor index or Vendor API",
            "type": "integer"
          },
          "InvoiceId": {
            "format": "int32",
            "description": "Site ID can be found in your Maxpanda Site index or Vendor API",
            "type": "integer"
          },
          "Sites": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "InvoiceNumber": {
            "description": "Invoice Number of Invoice",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "InvoiceDate": {
            "format": "date-time",
            "description": "Date on which Invoice was Raised",
            "type": "string"
          },
          "DueDate": {
            "format": "date-time",
            "description": "Due date of Invoice",
            "type": "string"
          },
          "Description": {
            "description": "Description of Invoice",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "InvoiceItems": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceItemModel"
            }
          },
          "InvoiceTaxes": {
            "description": "Taxes applied on Invoice",
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceTaxModel"
            }
          },
          "CurrentSite": {
            "format": "int32",
            "description": "Users current site",
            "type": "integer"
          }
        }
      },
      "InvoiceItemModel": {
        "required": [
          "InvoiceItemId",
          "InvoiceItemTypeId"
        ],
        "type": "object",
        "properties": {
          "InvoiceItemId": {
            "format": "int32",
            "type": "integer"
          },
          "InvoiceItemTypeId": {
            "format": "int32",
            "type": "integer"
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "UnitPrice": {
            "format": "double",
            "type": "number"
          },
          "Quantity": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "WorkOrderCategoryResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkOrderCategory"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "WorkOrderCategory": {
        "type": "object",
        "properties": {
          "WorkOrderCategoryId": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "SiteRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/SiteRef"
            }
          }
        }
      },
      "WorkOrderPriorityResponseModel": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkOrderCategory"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "WorkorderListResponseList": {
        "type": "object",
        "properties": {
          "Results": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkOrderList"
            }
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          }
        }
      },
      "WorkOrderList": {
        "type": "object",
        "properties": {
          "SiteRef": {
            "$ref": "#/definitions/SiteRef"
          },
          "WorkorderId": {
            "format": "int32",
            "type": "integer"
          },
          "Title": {
            "type": "string"
          },
          "ReferenceID": {
            "type": "string"
          },
          "CategoryRef": {
            "$ref": "#/definitions/WorkorderCategoryRef"
          },
          "PriorityRef": {
            "$ref": "#/definitions/WorkorderPriorityRef"
          },
          "StatusRef": {
            "$ref": "#/definitions/WorkorderStatus"
          },
          "WorkorderTypeRef": {
            "$ref": "#/definitions/WorkorderTypeRef"
          },
          "ShortDescription": {
            "type": "string"
          },
          "Notes": {
            "type": "string"
          },
          "PrivateNotes": {
            "type": "string"
          },
          "Comments": {
            "type": "string"
          },
          "PrimaryContact": {
            "type": "string"
          },
          "PrimaryPhone": {
            "type": "string"
          },
          "AlternateContact": {
            "type": "string"
          },
          "AlternatePhone": {
            "type": "string"
          },
          "ExternalEmails": {
            "type": "string"
          },
          "StartDate": {
            "format": "date-time",
            "type": "string"
          },
          "DueDate": {
            "format": "date-time",
            "type": "string"
          },
          "PlannedDueDate": {
            "format": "date-time",
            "type": "string"
          },
          "CompletedDate": {
            "format": "date-time",
            "type": "string"
          },
          "ClosedDate": {
            "format": "date-time",
            "type": "string"
          },
          "ApprovedDate": {
            "format": "date-time",
            "type": "string"
          },
          "EnterWorkArea": {
            "type": "string"
          },
          "CustomerRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CustomerRef"
            }
          },
          "BuildingGroupRef": {
            "$ref": "#/definitions/DepartmentRef"
          },
          "BuildingRef": {
            "$ref": "#/definitions/BuildingRef"
          },
          "LocationRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/LocationRef"
            }
          },
          "AssetRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/AssetRef"
            }
          },
          "VendorRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/VendorRef"
            }
          },
          "TaskRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WOTaskDetailRef"
            }
          },
          "PartRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WOPartRef"
            }
          },
          "StaffRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StaffRef"
            }
          },
          "CustomerInvoiceRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceRef"
            }
          },
          "VendorInvoiceRef": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/InvoiceRef"
            }
          },
          "WorkOrderAudit": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkOrderAudit"
            }
          },
          "TotalHours": {
            "type": "string"
          },
          "TotalCost": {
            "format": "double",
            "type": "number"
          },
          "TotalPartsCost": {
            "format": "double",
            "type": "number"
          },
          "TotalInvoiceCost": {
            "format": "double",
            "type": "number"
          },
          "TotalLabourCost": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "WorkorderCategoryRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "WorkorderPriorityRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "WorkorderStatus": {
        "type": "object",
        "properties": {
          "StatusValue": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "WorkorderTypeRef": {
        "type": "object",
        "properties": {
          "TypeValue": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "CustomerRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "WOTaskDetailRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Description": {
            "type": "string"
          },
          "PriorityRef": {
            "$ref": "#/definitions/TaskPriorityDetails"
          },
          "Comment": {
            "type": "string"
          },
          "StatusRef": {
            "$ref": "#/definitions/TaskStatusAPIListModel"
          },
          "NotifyUsers": {
            "type": "string"
          },
          "Vendor": {
            "$ref": "#/definitions/VendorDetail"
          },
          "Staff": {
            "$ref": "#/definitions/UserDetail"
          },
          "SortOrder": {
            "format": "int32",
            "type": "integer"
          },
          "Fields": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WOTaskFieldDetail"
            }
          }
        }
      },
      "WOPartRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "OnHand": {
            "format": "double",
            "type": "number"
          },
          "Used": {
            "format": "double",
            "type": "number"
          },
          "Allocated": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "StaffRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Rate": {
            "format": "double",
            "type": "number"
          },
          "ActualTime": {
            "type": "string"
          },
          "ActiveWeeklyHours": {
            "format": "double",
            "type": "number"
          },
          "TotalActiveHours": {
            "format": "double",
            "type": "number"
          },
          "ToolTime": {
            "type": "string"
          },
          "WeekNum": {
            "type": "string"
          },
          "WorkOrderResourceWeeklyActiveHours": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkOrderResourceActiveHoursWeeklyModel"
            }
          }
        }
      },
      "InvoiceRef": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "InvoiceNumber": {
            "type": "string"
          },
          "InvoiceAmount": {
            "format": "double",
            "type": "number"
          },
          "InvoiceDate": {
            "format": "date-time",
            "type": "string"
          }
        }
      },
      "WorkOrderAudit": {
        "type": "object",
        "properties": {
          "idWorkOrder": {
            "format": "int32",
            "type": "integer"
          },
          "idWorkOrderAudit": {
            "format": "int32",
            "type": "integer"
          },
          "Details": {
            "type": "string"
          },
          "OriginalStatus": {
            "format": "int32",
            "type": "integer"
          },
          "CurrentStatus": {
            "format": "int32",
            "type": "integer"
          },
          "OriginalStatusDesc": {
            "type": "string"
          },
          "CurrentStatusDesc": {
            "type": "string"
          },
          "CreatedDate": {
            "format": "date-time",
            "type": "string"
          },
          "CreatedByName": {
            "type": "string"
          },
          "ResponseTimeDate": {
            "format": "date-time",
            "type": "string"
          },
          "ProcessedDate": {
            "format": "date-time",
            "type": "string"
          },
          "ResponseTimeNoticeSent": {
            "type": "boolean"
          }
        }
      },
      "TaskPriorityDetails": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "TaskStatusAPIListModel": {
        "type": "object",
        "properties": {
          "idTaskStatus": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "VendorDetail": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "UserDetail": {
        "type": "object",
        "properties": {
          "Id": {
            "format": "int32",
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "WOTaskFieldDetail": {
        "type": "object",
        "properties": {
          "idWorkOrderTaskField": {
            "format": "int32",
            "type": "integer"
          },
          "FieldName": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "FieldType": {
            "format": "int32",
            "type": "integer"
          },
          "FieldTypeName": {
            "type": "string"
          },
          "FieldValue": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string"
          },
          "IsRequired": {
            "type": "boolean"
          },
          "IsRangeDefined": {
            "type": "boolean"
          },
          "RangeMinValue": {
            "type": "string"
          },
          "RangeMaxValue": {
            "type": "string"
          },
          "SortOrder": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "WorkOrderResourceActiveHoursWeeklyModel": {
        "type": "object",
        "properties": {
          "ActiveHoursWeekNum": {
            "type": "string"
          },
          "TotalActiveHoursWorked": {
            "format": "double",
            "type": "number"
          },
          "TotalActiveHoursHourVal": {
            "format": "int32",
            "type": "integer"
          },
          "TotalActiveHoursMinuteVal": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "PagedResults": {
        "type": "object",
        "properties": {
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          },
          "PageNumber": {
            "format": "int32",
            "description": "The page number this page represents.",
            "type": "integer"
          },
          "PageSize": {
            "format": "int32",
            "description": "The number of records returned in a page.",
            "type": "integer"
          },
          "TotalNumberOfPages": {
            "format": "int32",
            "description": "The total number of pages available.",
            "type": "integer"
          },
          "TotalNumberOfRecords": {
            "format": "int32",
            "description": "The total number of records available.",
            "type": "integer"
          },
          "NextPageUrl": {
            "description": "The URL to the next page - if null, there are no more pages.",
            "type": "string"
          },
          "Results": {
            "description": "The records this page represents.",
            "type": "object"
          }
        }
      },
      "Workorder": {
        "required": [
          "SiteId",
          "Title",
          "WorkorderCategoryId",
          "WorkorderPriorityId",
          "EnterWorkArea",
          "StartDate"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the WorkOrder. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "Title": {
            "description": "Name or Title of the WorkOrder",
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "ReferencedId": {
            "description": "Reference Id of the WorkOrder",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "WorkorderCategoryId": {
            "format": "int32",
            "description": "Category Id of the WorkOrder. Category Id can be found in your Maxpanda Company WorkOrderCategory or WorkOrderCategory API",
            "type": "integer"
          },
          "WorkorderPriorityId": {
            "format": "int32",
            "description": "Priority Id of the WorkOrder. Priotiy Id can be found in your Maxpanda Company WorkOrderPriority or WorkOrderPriority API",
            "type": "integer"
          },
          "ShortDescription": {
            "description": "Short Description about the WorkOrder",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "Notes": {
            "description": "Notes for the Staff",
            "maxLength": 5000,
            "minLength": 0,
            "type": "string"
          },
          "PrivateNotes": {
            "description": "Private Notes",
            "maxLength": 5000,
            "minLength": 0,
            "type": "string"
          },
          "Comments": {
            "description": "Comments",
            "maxLength": 5000,
            "minLength": 0,
            "type": "string"
          },
          "PrimaryContact": {
            "description": "Primary Contact Number",
            "type": "string"
          },
          "AlternateContact": {
            "description": "Alternate Contact Number",
            "type": "string"
          },
          "AddCC": {
            "description": "Add external Email Recipients",
            "type": "string"
          },
          "EnterWorkArea": {
            "description": "Allow to enter in Work Area. Enter boolean value.",
            "type": "boolean"
          },
          "AllDayEvent": {
            "description": "Is this an All day event",
            "type": "boolean"
          },
          "StartDate": {
            "format": "date-time",
            "description": "Date on which WorkOrder was Started",
            "type": "string"
          },
          "DueDate": {
            "format": "date-time",
            "description": "Due Date of WorkOrder",
            "type": "string"
          },
          "CompletedDate": {
            "format": "date-time",
            "description": "Date on which WorkOrder was Completed",
            "type": "string"
          },
          "ClosedDate": {
            "format": "date-time",
            "description": "Date on which WorkOrder was Closed",
            "type": "string"
          },
          "CustomerId": {
            "format": "int32",
            "description": "Customer Id of the WorkOrder. Customer Id can be found in your Maxpanda Customer Index or Customer API",
            "type": "integer"
          },
          "BuildingGroupId": {
            "format": "int32",
            "description": "Building Group Id of the WorkOrder. Building Group Id can be found in your Maxpanda Company Building Group or Department API",
            "type": "integer"
          },
          "BuildingId": {
            "format": "int32",
            "description": "Building Id of the WorkOrder. Building Id can be found in your Maxpanda Building Index or Buildings API",
            "type": "integer"
          },
          "LocationsId": {
            "description": "Location Id of the WorkOrder. Location Id can be found in your Maxpanda Location Index or Locations API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "AssetsId": {
            "description": "Asset Id of the WorkOrder. Asset Id can be found in your Maxpanda Asset Index or Assets API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "VendorId": {
            "description": "Vendor Id of the WorkOrder. Vendor Id can be found in your Maxpanda Vendor Index or Vendors API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "TasksId": {
            "description": "Task Id of the WorkOrder. Task Id can be found in your Maxpanda Task Index or Task API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "StaffsId": {
            "description": "Staff Id of the WorkOrder. Staff Id can be found in your Maxpanda Users Index or Users API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "CustomerInvoicesId": {
            "description": "Customer Invoice Id of the WorkOrder. Customer Invoice Id can be found in your Maxpanda Customer Invoice Index or Customer Invoices API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "VendorInvoicesId": {
            "description": "Vendor Invoices Id of the WorkOrder. Vendor Invoices Id can be found in your Maxpanda Inventory Invoices Index or Vendor Invoices API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "WorkOrderPartRefs": {
            "description": "Part Id of the WorkOrder. Part Id can be found in your Maxpanda Part Index or Parts API",
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkOrderPartsRef"
            }
          }
        }
      },
      "WorkOrderPartsRef": {
        "type": "object",
        "properties": {
          "PartId": {
            "format": "int32",
            "type": "integer"
          },
          "allocated": {
            "format": "double",
            "type": "number"
          },
          "Comment": {
            "type": "string"
          }
        }
      },
      "WorkOrderCreateUpdateResponseModel": {
        "type": "object",
        "properties": {
          "Result": {
            "$ref": "#/definitions/CreateUpdateWorkorderModel"
          },
          "IsSuccess": {
            "description": "It represents Success of an API request.",
            "type": "boolean"
          },
          "Message": {
            "description": "The Response represents the Response Message  of API",
            "type": "string"
          },
          "Status": {
            "description": "The Status represents the response status of API",
            "type": "string"
          },
          "StatusCode": {
            "format": "int32",
            "description": "The Response represents the ResponseCode  of API",
            "type": "integer"
          }
        }
      },
      "CreateUpdateWorkorderModel": {
        "type": "object",
        "properties": {
          "WorkOrderId": {
            "format": "int32",
            "description": "Id of New WorkOrder",
            "type": "integer"
          }
        }
      },
      "UpdateWorkorder": {
        "required": [
          "SiteId",
          "WorkorderId",
          "Title",
          "WorkorderCategoryId",
          "WorkorderPriorityId",
          "EnterWorkArea",
          "StartDate",
          "WorkorderStatus"
        ],
        "type": "object",
        "properties": {
          "SiteId": {
            "format": "int32",
            "description": "Site Id of the WorkOrder. Site Id can be found in your Maxpanda Site Index or Site API",
            "type": "integer"
          },
          "WorkorderId": {
            "format": "int32",
            "description": "Id of the WorkOrder. Workorder Id can be found in your Maxpanda Workorder List View or Workorder API",
            "type": "integer"
          },
          "Title": {
            "description": "Name or Title of the WorkOrder",
            "maxLength": 250,
            "minLength": 0,
            "type": "string"
          },
          "ReferencedId": {
            "description": "Reference Id of the WorkOrder",
            "maxLength": 45,
            "minLength": 0,
            "type": "string"
          },
          "WorkorderCategoryId": {
            "format": "int32",
            "description": "Category Id of the WorkOrder. Category Id can be found in your Maxpanda Company WorkOrderCategory or WorkOrderCategory API",
            "type": "integer"
          },
          "WorkorderPriorityId": {
            "format": "int32",
            "description": "Priority Id of the WorkOrder. Priotiy Id can be found in your Maxpanda Company WorkOrderPriority or WorkOrderPriority API",
            "type": "integer"
          },
          "ShortDescription": {
            "description": "Short Description about the WorkOrder",
            "maxLength": 500,
            "minLength": 0,
            "type": "string"
          },
          "Notes": {
            "description": "Notes for the Staff",
            "maxLength": 5000,
            "minLength": 0,
            "type": "string"
          },
          "PrivateNotes": {
            "description": "Private Notes",
            "maxLength": 5000,
            "minLength": 0,
            "type": "string"
          },
          "Comments": {
            "description": "Comments",
            "maxLength": 5000,
            "minLength": 0,
            "type": "string"
          },
          "PrimaryContact": {
            "description": "Primary Contact Number",
            "type": "string"
          },
          "AlternateContact": {
            "description": "Alternate Contact Number",
            "type": "string"
          },
          "AddCC": {
            "description": "Add external Email Recipients",
            "type": "string"
          },
          "EnterWorkArea": {
            "description": "Allow to enter in Work Area. Enter boolean value.",
            "type": "string"
          },
          "AllDayEvent": {
            "description": "Is this an All day event",
            "type": "boolean"
          },
          "StartDate": {
            "format": "date-time",
            "description": "Date on which WorkOrder was Started",
            "type": "string"
          },
          "DueDate": {
            "format": "date-time",
            "description": "Due Date of WorkOrder",
            "type": "string"
          },
          "CompletedDate": {
            "format": "date-time",
            "description": "Date on which WorkOrder was Completed",
            "type": "string"
          },
          "ClosedDate": {
            "format": "date-time",
            "description": "Date on which WorkOrder was Closed",
            "type": "string"
          },
          "CustomerId": {
            "format": "int32",
            "description": "Customer Id of the WorkOrder. Customer Id can be found in your Maxpanda Customer Index or Customer API",
            "type": "integer"
          },
          "BuildingGroupId": {
            "format": "int32",
            "description": "Building Group Id of the WorkOrder. Building Group Id can be found in your Maxpanda Company Building Group or Department API",
            "type": "integer"
          },
          "BuildingId": {
            "format": "int32",
            "description": "Building Id of the WorkOrder. Building Id can be found in your Maxpanda Building Index or Buildings API",
            "type": "integer"
          },
          "LocationsId": {
            "description": "Location Id of the WorkOrder. Location Id can be found in your Maxpanda Location Index or Locations API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "AssetsId": {
            "description": "Asset Id of the WorkOrder. Asset Id can be found in your Maxpanda Asset Index or Assets API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "VendorId": {
            "description": "Vendor Id of the WorkOrder. Vendor Id can be found in your Maxpanda Vendor Index or Vendors API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "TasksId": {
            "description": "Task Id of the WorkOrder. Task Id can be found in your Maxpanda Task Index or Task API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "WorkorderStaffsRef": {
            "description": "Staff details of the WorkOrder. Staff details can be found in your Maxpanda Users Index or Users API",
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkorderStaffsRef"
            }
          },
          "CustomerInvoicesId": {
            "description": "Customer Invoice Id of the WorkOrder. Customer Invoice Id can be found in your Maxpanda Customer Invoice Index or Customer Invoices API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "VendorInvoicesId": {
            "description": "Vendor Invoices Id of the WorkOrder. Vendor Invoices Id can be found in your Maxpanda Inventory Invoices Index or Vendor Invoices API",
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "workOrderPartRefs": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/WorkOrderPartsRef"
            }
          },
          "WorkorderStatus": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "WorkorderStaffsRef": {
        "required": [
          "UserId",
          "ActiveLabourHours"
        ],
        "type": "object",
        "properties": {
          "UserId": {
            "format": "int32",
            "description": "Id of Staff assigned for Workorder.User Id can be found in your Maxpanda Users Index or Users API",
            "type": "integer"
          },
          "ActiveLabourHours": {
            "description": "Input active hours from Staff.Input must be in \"hh:mm\" format only.",
            "type": "string"
          }
        }
      }
    },
    "securityDefinitions": {
      "Authorization": {
        "type": "apiKey",
        "description": "API Key Authentication",
        "name": "Authorization",
        "in": "header"
      }
    }
  }